
GarbageBinHardware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  000012b6  0000134a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012b6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800128  00800128  00001372  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001372  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001c0  00000000  00000000  000013ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000017bb  00000000  00000000  0000158e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b97  00000000  00000000  00002d49  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000095b  00000000  00000000  000038e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003d8  00000000  00000000  0000423c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000961  00000000  00000000  00004614  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000965  00000000  00000000  00004f75  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000160  00000000  00000000  000058da  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
{
  while( *text ) { LCD_SendChar( *text++ ); }
}

void LCD_PrintHex( const int data )
{
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  // Allocate space for result.
  char st[8] = "";
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__vector_10>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  
  // Convert data to ASCII hex.
  itoa( data, st, 16 );
  
  // Prepend "0x" prefix.
  LCD_PrintMessage( "0x" );
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__vector_13>
  
  // Print the data to LCD.
  LCD_PrintMessage( st );
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
}
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
  {
    m_buf[ m_idx ] = cstr[ m_idx ];
    m_idx++;
  }

  m_buf[ m_idx ] = '\0';
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
}
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2159>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e6 eb       	ldi	r30, 0xB6	; 182
     17e:	f2 e1       	ldi	r31, 0x12	; 18
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a8 32       	cpi	r26, 0x28	; 40
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	a8 e2       	ldi	r26, 0x28	; 40
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	ac 32       	cpi	r26, 0x2C	; 44
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 9b 01 	call	0x336	; 0x336 <main>
     1a0:	0c 94 59 09 	jmp	0x12b2	; 0x12b2 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <__vector_13>:
volatile uint16_t HCSR04_measuredTransmitToReceiveTime = 0;
volatile bool HCSR04_timerOverflowFlag = false;
volatile bool HCSR04_waitFlag = false;

ISR( TIMER1_OVF_vect )
{
     1a8:	1f 92       	push	r1
     1aa:	0f 92       	push	r0
     1ac:	0f b6       	in	r0, 0x3f	; 63
     1ae:	0f 92       	push	r0
     1b0:	11 24       	eor	r1, r1
     1b2:	8f 93       	push	r24
  // Indicate that TIMER1 counter has overflowed.
  HCSR04_timerOverflowFlag = true;
     1b4:	81 e0       	ldi	r24, 0x01	; 1
     1b6:	80 93 29 01 	sts	0x0129, r24

  // Indicate that the program can stop waiting.
  HCSR04_waitFlag = false;
     1ba:	10 92 28 01 	sts	0x0128, r1
}
     1be:	8f 91       	pop	r24
     1c0:	0f 90       	pop	r0
     1c2:	0f be       	out	0x3f, r0	; 63
     1c4:	0f 90       	pop	r0
     1c6:	1f 90       	pop	r1
     1c8:	18 95       	reti

000001ca <__vector_10>:

ISR( TIMER1_CAPT_vect )
{
     1ca:	1f 92       	push	r1
     1cc:	0f 92       	push	r0
     1ce:	0f b6       	in	r0, 0x3f	; 63
     1d0:	0f 92       	push	r0
     1d2:	11 24       	eor	r1, r1
     1d4:	8f 93       	push	r24
     1d6:	9f 93       	push	r25
     1d8:	ef 93       	push	r30
     1da:	ff 93       	push	r31
  // If input capture was previously on a rising edge trigger...
  if( ( TCCR1B & ( 1 << ICES1 ) ) == ( 1 << ICES1 ) )
     1dc:	80 91 81 00 	lds	r24, 0x0081
     1e0:	86 ff       	sbrs	r24, 6
     1e2:	0b c0       	rjmp	.+22     	; 0x1fa <__vector_10+0x30>
  {
    // Reset input capture to a falling edge trigger.
    TCCR1B ^= ( 1 << ICES1 );
     1e4:	e1 e8       	ldi	r30, 0x81	; 129
     1e6:	f0 e0       	ldi	r31, 0x00	; 0
     1e8:	90 81       	ld	r25, Z
     1ea:	80 e4       	ldi	r24, 0x40	; 64
     1ec:	89 27       	eor	r24, r25
     1ee:	80 83       	st	Z, r24

    // Restart TIMER1 counter counting from 0.
    TCNT1 = 0;
     1f0:	10 92 85 00 	sts	0x0085, r1
     1f4:	10 92 84 00 	sts	0x0084, r1
     1f8:	0a c0       	rjmp	.+20     	; 0x20e <__vector_10+0x44>
  }
  else
  {
    // Set the transmit to receive time.
    HCSR04_measuredTransmitToReceiveTime = TCNT1;
     1fa:	80 91 84 00 	lds	r24, 0x0084
     1fe:	90 91 85 00 	lds	r25, 0x0085
     202:	90 93 2b 01 	sts	0x012B, r25
     206:	80 93 2a 01 	sts	0x012A, r24

    // Indicate that the program can stop waiting.
    HCSR04_waitFlag = false;
     20a:	10 92 28 01 	sts	0x0128, r1
  }
}
     20e:	ff 91       	pop	r31
     210:	ef 91       	pop	r30
     212:	9f 91       	pop	r25
     214:	8f 91       	pop	r24
     216:	0f 90       	pop	r0
     218:	0f be       	out	0x3f, r0	; 63
     21a:	0f 90       	pop	r0
     21c:	1f 90       	pop	r1
     21e:	18 95       	reti

00000220 <_Z13HCSR04_Enablev>:

void HCSR04_Enable()
{
  // Disable all interrupts on the ATMEGA328p.
  cli();
     220:	f8 94       	cli

  // Clear the timer/counter control registers for TIMER1.
  // Setting TCCR1C to 0x00 sets TIMER1 to NORMAL MODE.
  TCCR1A = 0x00;
     222:	10 92 80 00 	sts	0x0080, r1
  TCCR1B = 0x00;
     226:	e1 e8       	ldi	r30, 0x81	; 129
     228:	f0 e0       	ldi	r31, 0x00	; 0
     22a:	10 82       	st	Z, r1
  TCCR1C = 0x00;
     22c:	10 92 82 00 	sts	0x0082, r1

  // Enable rising edge trigger with prescaler of 8.
  TCCR1B |= ( 1 << CS11 ) | ( 1 << ICES1 );
     230:	80 81       	ld	r24, Z
     232:	82 64       	ori	r24, 0x42	; 66
     234:	80 83       	st	Z, r24

  // Enable input capture and overflow interrupts.
  TIMSK1 |= ( 1 << ICIE1 ) | ( 1 << TOIE1 );
     236:	ef e6       	ldi	r30, 0x6F	; 111
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	80 81       	ld	r24, Z
     23c:	81 62       	ori	r24, 0x21	; 33
     23e:	80 83       	st	Z, r24

  // Start TIMER1 counter counting from 0.
  TCNT1 = 0;
     240:	10 92 85 00 	sts	0x0085, r1
     244:	10 92 84 00 	sts	0x0084, r1

  // Re-enable all interrupts.
  sei();
     248:	78 94       	sei
     24a:	08 95       	ret

0000024c <_Z14HCSR04_Disablev>:
}

void HCSR04_Disable()
{
  // Disable input capture and overflow interrupts on TIMER1.
  TIMSK1 = 0x00;
     24c:	10 92 6f 00 	sts	0x006F, r1

  // Stop timer.
  TCCR1B = 0x00;
     250:	10 92 81 00 	sts	0x0081, r1
     254:	08 95       	ret

00000256 <_Z11HCSR04_Initv>:
}

void HCSR04_Init()
{
  // Set PB0 (ECHO) as INPUT and PB1 (TRIG) as OUTPUT.
  DDRB |= ( 1 << HCSR04_TRIG );
     256:	21 9a       	sbi	0x04, 1	; 4
     258:	08 95       	ret

0000025a <_Z35HCSR04_MeasureTransmitToReceiveTimev>:
}

float HCSR04_MeasureTransmitToReceiveTime()
{
  // Reset timer overflow flag to false.
  HCSR04_timerOverflowFlag = false;
     25a:	10 92 29 01 	sts	0x0129, r1

  // Set TRIG to LOW for approximately 2us.
  ClearBit( PORTB, HCSR04_TRIG );
     25e:	29 98       	cbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     260:	8a e0       	ldi	r24, 0x0A	; 10
     262:	8a 95       	dec	r24
     264:	f1 f7       	brne	.-4      	; 0x262 <_Z35HCSR04_MeasureTransmitToReceiveTimev+0x8>
     266:	00 c0       	rjmp	.+0      	; 0x268 <_Z35HCSR04_MeasureTransmitToReceiveTimev+0xe>
  _delay_us( 2 );

  // Set TRIG to HIGH for approximately 10us.
  SetBit( PORTB, HCSR04_TRIG );
     268:	29 9a       	sbi	0x05, 1	; 5
     26a:	85 e3       	ldi	r24, 0x35	; 53
     26c:	8a 95       	dec	r24
     26e:	f1 f7       	brne	.-4      	; 0x26c <_Z35HCSR04_MeasureTransmitToReceiveTimev+0x12>
     270:	00 00       	nop
  _delay_us( 10 );

  // Set TRIG to LOW after 10us HIGH pulse.
  ClearBit( PORTB, HCSR04_TRIG );
     272:	29 98       	cbi	0x05, 1	; 5

  // Enable timer overflow and input capture interrupts on ECHO.
  HCSR04_Enable();
     274:	0e 94 10 01 	call	0x220	; 0x220 <_Z13HCSR04_Enablev>

  // Set the WAIT flag to TRUE.
  HCSR04_waitFlag = true;
     278:	81 e0       	ldi	r24, 0x01	; 1
     27a:	80 93 28 01 	sts	0x0128, r24

  // Wait until the WAIT flag becomes false.
  while( HCSR04_waitFlag );
     27e:	80 91 28 01 	lds	r24, 0x0128
     282:	81 11       	cpse	r24, r1
     284:	fc cf       	rjmp	.-8      	; 0x27e <_Z35HCSR04_MeasureTransmitToReceiveTimev+0x24>

  // Disable the input capture and overflow interrupts on TIMER1.
  HCSR04_Disable();
     286:	0e 94 26 01 	call	0x24c	; 0x24c <_Z14HCSR04_Disablev>

  // Transmit to receive time.
  float transmitToReceiveTime;

  // Check if TIMER1 has overflowed...
  if( HCSR04_timerOverflowFlag )
     28a:	80 91 29 01 	lds	r24, 0x0129
     28e:	81 11       	cpse	r24, r1
     290:	09 c0       	rjmp	.+18     	; 0x2a4 <_Z35HCSR04_MeasureTransmitToReceiveTimev+0x4a>
    transmitToReceiveTime = -1;
  }
  else
  {
    // Set transmit to receive time to measured transmit to receive time.
    transmitToReceiveTime = ( float )HCSR04_measuredTransmitToReceiveTime;
     292:	60 91 2a 01 	lds	r22, 0x012A
     296:	70 91 2b 01 	lds	r23, 0x012B
     29a:	80 e0       	ldi	r24, 0x00	; 0
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	0e 94 16 03 	call	0x62c	; 0x62c <__floatunsisf>
     2a2:	08 95       	ret

  // Check if TIMER1 has overflowed...
  if( HCSR04_timerOverflowFlag )
  {
    // Set transmit to receive time to -1 to indicate that TIMER1 has overflowed.
    transmitToReceiveTime = -1;
     2a4:	60 e0       	ldi	r22, 0x00	; 0
     2a6:	70 e0       	ldi	r23, 0x00	; 0
     2a8:	80 e8       	ldi	r24, 0x80	; 128
     2aa:	9f eb       	ldi	r25, 0xBF	; 191
    transmitToReceiveTime = ( float )HCSR04_measuredTransmitToReceiveTime;
  }

  // Return the transmit to receive time.
  return transmitToReceiveTime;
     2ac:	08 95       	ret

000002ae <_Z24HCSR04_MeasureCmDistancef>:
  // Set PB0 (ECHO) as INPUT and PB1 (TRIG) as OUTPUT.
  DDRB |= ( 1 << HCSR04_TRIG );
}

float HCSR04_MeasureCmDistance( const float degCTemperature )
{
     2ae:	8f 92       	push	r8
     2b0:	9f 92       	push	r9
     2b2:	af 92       	push	r10
     2b4:	bf 92       	push	r11
     2b6:	cf 92       	push	r12
     2b8:	df 92       	push	r13
     2ba:	ef 92       	push	r14
     2bc:	ff 92       	push	r15
     2be:	4b 01       	movw	r8, r22
     2c0:	5c 01       	movw	r10, r24
  // Measure the transmit to receive time in half microseconds (us).
  // Note that the period between two consecutive ticks is 1 / ( 16MHz / 8 ) = 0.5us.
  // 16MHz is the clock rate of the ATMEGA328p and 8 is the prescaler.
  float transmitToReceiveTime = HCSR04_MeasureTransmitToReceiveTime();
     2c2:	0e 94 2d 01 	call	0x25a	; 0x25a <_Z35HCSR04_MeasureTransmitToReceiveTimev>
     2c6:	6b 01       	movw	r12, r22
     2c8:	7c 01       	movw	r14, r24

  // Distance in cm.
  float cmDistance;

  // If TIMER1 has overflowed...
  if( HCSR04_timerOverflowFlag )
     2ca:	80 91 29 01 	lds	r24, 0x0129
     2ce:	81 11       	cpse	r24, r1
     2d0:	25 c0       	rjmp	.+74     	; 0x31c <_Z24HCSR04_MeasureCmDistancef+0x6e>
    // microseconds. We further divide this value by 2 to get the start to target duration in
    // microseconds. This is equivalent to dividing transmit to receive time by 4.
    float startToTargetDuration = transmitToReceiveTime / 4.0;
    
    // Calculate the approximate speed of sound given the temperature in degrees Celsius.
    float speedOfSound = 331.0 + ( 0.6 * degCTemperature );
     2d2:	2a e9       	ldi	r18, 0x9A	; 154
     2d4:	39 e9       	ldi	r19, 0x99	; 153
     2d6:	49 e1       	ldi	r20, 0x19	; 25
     2d8:	5f e3       	ldi	r21, 0x3F	; 63
     2da:	c5 01       	movw	r24, r10
     2dc:	b4 01       	movw	r22, r8
     2de:	0e 94 a4 03 	call	0x748	; 0x748 <__mulsf3>
     2e2:	20 e0       	ldi	r18, 0x00	; 0
     2e4:	30 e8       	ldi	r19, 0x80	; 128
     2e6:	45 ea       	ldi	r20, 0xA5	; 165
     2e8:	53 e4       	ldi	r21, 0x43	; 67
     2ea:	0e 94 4a 02 	call	0x494	; 0x494 <__addsf3>
     2ee:	4b 01       	movw	r8, r22
     2f0:	5c 01       	movw	r10, r24
  {
    // Calculate the approximate time duration in microseconds from the HCSR04 to the target.
    // We divide transmit to receive time by 2 to get the start to target duration in half 
    // microseconds. We further divide this value by 2 to get the start to target duration in
    // microseconds. This is equivalent to dividing transmit to receive time by 4.
    float startToTargetDuration = transmitToReceiveTime / 4.0;
     2f2:	20 e0       	ldi	r18, 0x00	; 0
     2f4:	30 e0       	ldi	r19, 0x00	; 0
     2f6:	40 e8       	ldi	r20, 0x80	; 128
     2f8:	5e e3       	ldi	r21, 0x3E	; 62
     2fa:	c7 01       	movw	r24, r14
     2fc:	b6 01       	movw	r22, r12
     2fe:	0e 94 a4 03 	call	0x748	; 0x748 <__mulsf3>
     302:	9b 01       	movw	r18, r22
     304:	ac 01       	movw	r20, r24
    
    // Calculate the approximate speed of sound given the temperature in degrees Celsius.
    float speedOfSound = 331.0 + ( 0.6 * degCTemperature );
    
    // Calculate the distance in cm. If we don't divide by 10000, we get the distance in m.
    cmDistance = ( speedOfSound * startToTargetDuration ) / 10000.0;
     306:	c5 01       	movw	r24, r10
     308:	b4 01       	movw	r22, r8
     30a:	0e 94 a4 03 	call	0x748	; 0x748 <__mulsf3>
     30e:	20 e0       	ldi	r18, 0x00	; 0
     310:	30 e4       	ldi	r19, 0x40	; 64
     312:	4c e1       	ldi	r20, 0x1C	; 28
     314:	56 e4       	ldi	r21, 0x46	; 70
     316:	0e 94 ae 02 	call	0x55c	; 0x55c <__divsf3>
     31a:	04 c0       	rjmp	.+8      	; 0x324 <_Z24HCSR04_MeasureCmDistancef+0x76>
  float cmDistance;

  // If TIMER1 has overflowed...
  if( HCSR04_timerOverflowFlag )
  {
    cmDistance = -1;
     31c:	60 e0       	ldi	r22, 0x00	; 0
     31e:	70 e0       	ldi	r23, 0x00	; 0
     320:	80 e8       	ldi	r24, 0x80	; 128
     322:	9f eb       	ldi	r25, 0xBF	; 191
    cmDistance = ( speedOfSound * startToTargetDuration ) / 10000.0;
  }

  // Return the distance.
  return cmDistance;
}
     324:	ff 90       	pop	r15
     326:	ef 90       	pop	r14
     328:	df 90       	pop	r13
     32a:	cf 90       	pop	r12
     32c:	bf 90       	pop	r11
     32e:	af 90       	pop	r10
     330:	9f 90       	pop	r9
     332:	8f 90       	pop	r8
     334:	08 95       	ret

00000336 <main>:
#include "HCSR04Driver.h"

#include <stdio.h>

int main()
{
     336:	cf 93       	push	r28
     338:	df 93       	push	r29
     33a:	cd b7       	in	r28, 0x3d	; 61
     33c:	de b7       	in	r29, 0x3e	; 62
     33e:	c4 56       	subi	r28, 0x64	; 100
     340:	d1 09       	sbc	r29, r1
     342:	0f b6       	in	r0, 0x3f	; 63
     344:	f8 94       	cli
     346:	de bf       	out	0x3e, r29	; 62
     348:	0f be       	out	0x3f, r0	; 63
     34a:	cd bf       	out	0x3d, r28	; 61
  // _delay_ms( 2000 );

  // Print a message to LCD.
  // LCD_PrintMessage( "Temp: 30" );

  TMP36GZ_Init();
     34c:	0e 94 dd 01 	call	0x3ba	; 0x3ba <_Z12TMP36GZ_Initv>
  HCSR04_Init();
     350:	0e 94 2b 01 	call	0x256	; 0x256 <_Z11HCSR04_Initv>
  char buf[100];

  // DDRB = 0xFF;
  // PORTB = 0xFF;

  USART_Init();
     354:	0e 94 22 02 	call	0x444	; 0x444 <_Z10USART_Initv>

  while( 1 )
  {
    float temperature = TMP36GZ_MeasureDegCTemperature();
    float cmDistance = HCSR04_MeasureCmDistance( temperature );
    sprintf(buf, "Temperature: %f Distance: %f cm\n", temperature, cmDistance);
     358:	0f 2e       	mov	r0, r31
     35a:	f6 e0       	ldi	r31, 0x06	; 6
     35c:	ef 2e       	mov	r14, r31
     35e:	f1 e0       	ldi	r31, 0x01	; 1
     360:	ff 2e       	mov	r15, r31
     362:	f0 2d       	mov	r31, r0
     364:	8e 01       	movw	r16, r28
     366:	0f 5f       	subi	r16, 0xFF	; 255
     368:	1f 4f       	sbci	r17, 0xFF	; 255

  USART_Init();

  while( 1 )
  {
    float temperature = TMP36GZ_MeasureDegCTemperature();
     36a:	0e 94 08 02 	call	0x410	; 0x410 <_Z30TMP36GZ_MeasureDegCTemperaturev>
     36e:	d6 2e       	mov	r13, r22
     370:	c7 2e       	mov	r12, r23
     372:	b8 2e       	mov	r11, r24
     374:	a9 2e       	mov	r10, r25
    float cmDistance = HCSR04_MeasureCmDistance( temperature );
     376:	0e 94 57 01 	call	0x2ae	; 0x2ae <_Z24HCSR04_MeasureCmDistancef>
    sprintf(buf, "Temperature: %f Distance: %f cm\n", temperature, cmDistance);
     37a:	9f 93       	push	r25
     37c:	8f 93       	push	r24
     37e:	7f 93       	push	r23
     380:	6f 93       	push	r22
     382:	af 92       	push	r10
     384:	bf 92       	push	r11
     386:	cf 92       	push	r12
     388:	df 92       	push	r13
     38a:	ff 92       	push	r15
     38c:	ef 92       	push	r14
     38e:	1f 93       	push	r17
     390:	0f 93       	push	r16
     392:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <sprintf>
    USART_SendString( buf );
     396:	c8 01       	movw	r24, r16
     398:	0e 94 3a 02 	call	0x474	; 0x474 <_Z16USART_SendStringPc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     39c:	2f ef       	ldi	r18, 0xFF	; 255
     39e:	83 ed       	ldi	r24, 0xD3	; 211
     3a0:	90 e3       	ldi	r25, 0x30	; 48
     3a2:	21 50       	subi	r18, 0x01	; 1
     3a4:	80 40       	sbci	r24, 0x00	; 0
     3a6:	90 40       	sbci	r25, 0x00	; 0
     3a8:	e1 f7       	brne	.-8      	; 0x3a2 <main+0x6c>
     3aa:	00 c0       	rjmp	.+0      	; 0x3ac <main+0x76>
     3ac:	00 00       	nop
     3ae:	0f b6       	in	r0, 0x3f	; 63
     3b0:	f8 94       	cli
     3b2:	de bf       	out	0x3e, r29	; 62
     3b4:	0f be       	out	0x3f, r0	; 63
     3b6:	cd bf       	out	0x3d, r28	; 61
     3b8:	d8 cf       	rjmp	.-80     	; 0x36a <main+0x34>

000003ba <_Z12TMP36GZ_Initv>:
#define TMP36GZ_CHANNEL 1

void TMP36GZ_Init()
{
  // Set the ADC prescaler to 128 (i.e., 16MHz / 128 = 125 KHz).
  ADCSRA |= ( 1 << ADPS2 ) | ( 1 << ADPS1 ) | ( 1 << ADPS0 );
     3ba:	ea e7       	ldi	r30, 0x7A	; 122
     3bc:	f0 e0       	ldi	r31, 0x00	; 0
     3be:	80 81       	ld	r24, Z
     3c0:	87 60       	ori	r24, 0x07	; 7
     3c2:	80 83       	st	Z, r24

  // Set the voltage reference from AVcc (i.e., 5V).
  ADMUX |= ( 1 << REFS0 );
     3c4:	ac e7       	ldi	r26, 0x7C	; 124
     3c6:	b0 e0       	ldi	r27, 0x00	; 0
     3c8:	8c 91       	ld	r24, X
     3ca:	80 64       	ori	r24, 0x40	; 64
     3cc:	8c 93       	st	X, r24

  // Turn on the ADC.
  ADCSRA |= ( 1 << ADEN );
     3ce:	80 81       	ld	r24, Z
     3d0:	80 68       	ori	r24, 0x80	; 128
     3d2:	80 83       	st	Z, r24

  // Do the initial conversion (i.e., the slowest conversion)
  // to ensure that everything is up and running.
  ADCSRA |= ( 1 << ADSC );
     3d4:	80 81       	ld	r24, Z
     3d6:	80 64       	ori	r24, 0x40	; 64
     3d8:	80 83       	st	Z, r24
     3da:	08 95       	ret

000003dc <_Z15TMP36GZ_ReadADCv>:
}

uint16_t TMP36GZ_ReadADC()
{
  // Clear the previously read channel.
  ADMUX &= 0xf0;
     3dc:	ec e7       	ldi	r30, 0x7C	; 124
     3de:	f0 e0       	ldi	r31, 0x00	; 0
     3e0:	80 81       	ld	r24, Z
     3e2:	80 7f       	andi	r24, 0xF0	; 240
     3e4:	80 83       	st	Z, r24
  
  // Select the ADC channel to be read.
  ADMUX |= TMP36GZ_CHANNEL;
     3e6:	80 81       	ld	r24, Z
     3e8:	81 60       	ori	r24, 0x01	; 1
     3ea:	80 83       	st	Z, r24
  
  // Start a new conversion. By default, this conversion will
  // be performed in single conversion mode.
  ADCSRA |= ( 1 << ADSC );
     3ec:	ea e7       	ldi	r30, 0x7A	; 122
     3ee:	f0 e0       	ldi	r31, 0x00	; 0
     3f0:	80 81       	ld	r24, Z
     3f2:	80 64       	ori	r24, 0x40	; 64
     3f4:	80 83       	st	Z, r24
  
  // Wait until the conversion is complete.
  // while( ADCSRA & ( 1 << ADSC ) );
  while( ADCSRA & ( 1 << ADIF ) );
     3f6:	80 81       	ld	r24, Z
     3f8:	84 fd       	sbrc	r24, 4
     3fa:	fd cf       	rjmp	.-6      	; 0x3f6 <_Z15TMP36GZ_ReadADCv+0x1a>

  // Obtain the ADC reading from Vout.
  uint16_t adcReading = ADC;
     3fc:	80 91 78 00 	lds	r24, 0x0078
     400:	90 91 79 00 	lds	r25, 0x0079

  // Clear the ADIF flag.
  ADCSRA |= ( 1 << ADIF );
     404:	ea e7       	ldi	r30, 0x7A	; 122
     406:	f0 e0       	ldi	r31, 0x00	; 0
     408:	20 81       	ld	r18, Z
     40a:	20 61       	ori	r18, 0x10	; 16
     40c:	20 83       	st	Z, r18

  // Return the ADC reading.
  return adcReading;
}
     40e:	08 95       	ret

00000410 <_Z30TMP36GZ_MeasureDegCTemperaturev>:

float TMP36GZ_MeasureDegCTemperature()
{
  // Get ADC reading from TMP36GZ.
  uint16_t adcReading = TMP36GZ_ReadADC();
     410:	0e 94 ee 01 	call	0x3dc	; 0x3dc <_Z15TMP36GZ_ReadADCv>
  
  // Compute analog voltage in mV from ADC reading. Assume 5V reference.
  float mvVoltage = ( float )adcReading * ( 5000.0 / 1024.0 );
     414:	bc 01       	movw	r22, r24
     416:	80 e0       	ldi	r24, 0x00	; 0
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	0e 94 16 03 	call	0x62c	; 0x62c <__floatunsisf>
     41e:	20 e0       	ldi	r18, 0x00	; 0
     420:	30 e4       	ldi	r19, 0x40	; 64
     422:	4c e9       	ldi	r20, 0x9C	; 156
     424:	50 e4       	ldi	r21, 0x40	; 64
     426:	0e 94 a4 03 	call	0x748	; 0x748 <__mulsf3>
  
  // Compute the temperature in degrees Celsius.
  float degCTemperature = ( mvVoltage - 500.0 ) / 10.0;
     42a:	20 e0       	ldi	r18, 0x00	; 0
     42c:	30 e0       	ldi	r19, 0x00	; 0
     42e:	4a ef       	ldi	r20, 0xFA	; 250
     430:	53 e4       	ldi	r21, 0x43	; 67
     432:	0e 94 49 02 	call	0x492	; 0x492 <__subsf3>
     436:	20 e0       	ldi	r18, 0x00	; 0
     438:	30 e0       	ldi	r19, 0x00	; 0
     43a:	40 e2       	ldi	r20, 0x20	; 32
     43c:	51 e4       	ldi	r21, 0x41	; 65
     43e:	0e 94 ae 02 	call	0x55c	; 0x55c <__divsf3>

  // Return the temperature.
  return degCTemperature;
     442:	08 95       	ret

00000444 <_Z10USART_Initv>:
#define BAUDRATE       9600
#define BAUD_PRESCALER (((F_CPU / (BAUDRATE * 16UL))) - 1)

void USART_Init( void )
{
  UBRR0H = ( BAUD_PRESCALER >> 8 );
     444:	10 92 c5 00 	sts	0x00C5, r1
  UBRR0L = ( BAUD_PRESCALER );
     448:	87 e6       	ldi	r24, 0x67	; 103
     44a:	80 93 c4 00 	sts	0x00C4, r24
  UCSR0B |= ( 1 << RXEN0 ) | ( 1 << TXEN0 );
     44e:	e1 ec       	ldi	r30, 0xC1	; 193
     450:	f0 e0       	ldi	r31, 0x00	; 0
     452:	80 81       	ld	r24, Z
     454:	88 61       	ori	r24, 0x18	; 24
     456:	80 83       	st	Z, r24
  UCSR0C |= ( 1 << UCSZ00 ) | ( 1 << UCSZ01 );
     458:	e2 ec       	ldi	r30, 0xC2	; 194
     45a:	f0 e0       	ldi	r31, 0x00	; 0
     45c:	80 81       	ld	r24, Z
     45e:	86 60       	ori	r24, 0x06	; 6
     460:	80 83       	st	Z, r24
     462:	08 95       	ret

00000464 <_Z14USART_SendByteh>:
  return receivedString;
}

void USART_SendByte( unsigned char data )
{
  while( ! ( UCSR0A & ( 1 << UDRE0 ) ) );
     464:	e0 ec       	ldi	r30, 0xC0	; 192
     466:	f0 e0       	ldi	r31, 0x00	; 0
     468:	90 81       	ld	r25, Z
     46a:	95 ff       	sbrs	r25, 5
     46c:	fd cf       	rjmp	.-6      	; 0x468 <_Z14USART_SendByteh+0x4>
  UDR0 = data;
     46e:	80 93 c6 00 	sts	0x00C6, r24
     472:	08 95       	ret

00000474 <_Z16USART_SendStringPc>:
}

void USART_SendString( char* stringPtr )
{
     474:	cf 93       	push	r28
     476:	df 93       	push	r29
     478:	ec 01       	movw	r28, r24
  while( *stringPtr != 0x00 )
     47a:	88 81       	ld	r24, Y
     47c:	88 23       	and	r24, r24
     47e:	31 f0       	breq	.+12     	; 0x48c <_Z16USART_SendStringPc+0x18>
     480:	21 96       	adiw	r28, 0x01	; 1
  {
    USART_SendByte( *stringPtr++ );
     482:	0e 94 32 02 	call	0x464	; 0x464 <_Z14USART_SendByteh>
  UDR0 = data;
}

void USART_SendString( char* stringPtr )
{
  while( *stringPtr != 0x00 )
     486:	89 91       	ld	r24, Y+
     488:	81 11       	cpse	r24, r1
     48a:	fb cf       	rjmp	.-10     	; 0x482 <_Z16USART_SendStringPc+0xe>
  {
    USART_SendByte( *stringPtr++ );
  }
     48c:	df 91       	pop	r29
     48e:	cf 91       	pop	r28
     490:	08 95       	ret

00000492 <__subsf3>:
     492:	50 58       	subi	r21, 0x80	; 128

00000494 <__addsf3>:
     494:	bb 27       	eor	r27, r27
     496:	aa 27       	eor	r26, r26
     498:	0e d0       	rcall	.+28     	; 0x4b6 <__addsf3x>
     49a:	1c c1       	rjmp	.+568    	; 0x6d4 <__fp_round>
     49c:	0d d1       	rcall	.+538    	; 0x6b8 <__fp_pscA>
     49e:	30 f0       	brcs	.+12     	; 0x4ac <__addsf3+0x18>
     4a0:	12 d1       	rcall	.+548    	; 0x6c6 <__fp_pscB>
     4a2:	20 f0       	brcs	.+8      	; 0x4ac <__addsf3+0x18>
     4a4:	31 f4       	brne	.+12     	; 0x4b2 <__addsf3+0x1e>
     4a6:	9f 3f       	cpi	r25, 0xFF	; 255
     4a8:	11 f4       	brne	.+4      	; 0x4ae <__addsf3+0x1a>
     4aa:	1e f4       	brtc	.+6      	; 0x4b2 <__addsf3+0x1e>
     4ac:	02 c1       	rjmp	.+516    	; 0x6b2 <__fp_nan>
     4ae:	0e f4       	brtc	.+2      	; 0x4b2 <__addsf3+0x1e>
     4b0:	e0 95       	com	r30
     4b2:	e7 fb       	bst	r30, 7
     4b4:	f8 c0       	rjmp	.+496    	; 0x6a6 <__fp_inf>

000004b6 <__addsf3x>:
     4b6:	e9 2f       	mov	r30, r25
     4b8:	1e d1       	rcall	.+572    	; 0x6f6 <__fp_split3>
     4ba:	80 f3       	brcs	.-32     	; 0x49c <__addsf3+0x8>
     4bc:	ba 17       	cp	r27, r26
     4be:	62 07       	cpc	r22, r18
     4c0:	73 07       	cpc	r23, r19
     4c2:	84 07       	cpc	r24, r20
     4c4:	95 07       	cpc	r25, r21
     4c6:	18 f0       	brcs	.+6      	; 0x4ce <__addsf3x+0x18>
     4c8:	71 f4       	brne	.+28     	; 0x4e6 <__addsf3x+0x30>
     4ca:	9e f5       	brtc	.+102    	; 0x532 <__addsf3x+0x7c>
     4cc:	36 c1       	rjmp	.+620    	; 0x73a <__fp_zero>
     4ce:	0e f4       	brtc	.+2      	; 0x4d2 <__addsf3x+0x1c>
     4d0:	e0 95       	com	r30
     4d2:	0b 2e       	mov	r0, r27
     4d4:	ba 2f       	mov	r27, r26
     4d6:	a0 2d       	mov	r26, r0
     4d8:	0b 01       	movw	r0, r22
     4da:	b9 01       	movw	r22, r18
     4dc:	90 01       	movw	r18, r0
     4de:	0c 01       	movw	r0, r24
     4e0:	ca 01       	movw	r24, r20
     4e2:	a0 01       	movw	r20, r0
     4e4:	11 24       	eor	r1, r1
     4e6:	ff 27       	eor	r31, r31
     4e8:	59 1b       	sub	r21, r25
     4ea:	99 f0       	breq	.+38     	; 0x512 <__addsf3x+0x5c>
     4ec:	59 3f       	cpi	r21, 0xF9	; 249
     4ee:	50 f4       	brcc	.+20     	; 0x504 <__addsf3x+0x4e>
     4f0:	50 3e       	cpi	r21, 0xE0	; 224
     4f2:	68 f1       	brcs	.+90     	; 0x54e <__addsf3x+0x98>
     4f4:	1a 16       	cp	r1, r26
     4f6:	f0 40       	sbci	r31, 0x00	; 0
     4f8:	a2 2f       	mov	r26, r18
     4fa:	23 2f       	mov	r18, r19
     4fc:	34 2f       	mov	r19, r20
     4fe:	44 27       	eor	r20, r20
     500:	58 5f       	subi	r21, 0xF8	; 248
     502:	f3 cf       	rjmp	.-26     	; 0x4ea <__addsf3x+0x34>
     504:	46 95       	lsr	r20
     506:	37 95       	ror	r19
     508:	27 95       	ror	r18
     50a:	a7 95       	ror	r26
     50c:	f0 40       	sbci	r31, 0x00	; 0
     50e:	53 95       	inc	r21
     510:	c9 f7       	brne	.-14     	; 0x504 <__addsf3x+0x4e>
     512:	7e f4       	brtc	.+30     	; 0x532 <__addsf3x+0x7c>
     514:	1f 16       	cp	r1, r31
     516:	ba 0b       	sbc	r27, r26
     518:	62 0b       	sbc	r22, r18
     51a:	73 0b       	sbc	r23, r19
     51c:	84 0b       	sbc	r24, r20
     51e:	ba f0       	brmi	.+46     	; 0x54e <__addsf3x+0x98>
     520:	91 50       	subi	r25, 0x01	; 1
     522:	a1 f0       	breq	.+40     	; 0x54c <__addsf3x+0x96>
     524:	ff 0f       	add	r31, r31
     526:	bb 1f       	adc	r27, r27
     528:	66 1f       	adc	r22, r22
     52a:	77 1f       	adc	r23, r23
     52c:	88 1f       	adc	r24, r24
     52e:	c2 f7       	brpl	.-16     	; 0x520 <__addsf3x+0x6a>
     530:	0e c0       	rjmp	.+28     	; 0x54e <__addsf3x+0x98>
     532:	ba 0f       	add	r27, r26
     534:	62 1f       	adc	r22, r18
     536:	73 1f       	adc	r23, r19
     538:	84 1f       	adc	r24, r20
     53a:	48 f4       	brcc	.+18     	; 0x54e <__addsf3x+0x98>
     53c:	87 95       	ror	r24
     53e:	77 95       	ror	r23
     540:	67 95       	ror	r22
     542:	b7 95       	ror	r27
     544:	f7 95       	ror	r31
     546:	9e 3f       	cpi	r25, 0xFE	; 254
     548:	08 f0       	brcs	.+2      	; 0x54c <__addsf3x+0x96>
     54a:	b3 cf       	rjmp	.-154    	; 0x4b2 <__addsf3+0x1e>
     54c:	93 95       	inc	r25
     54e:	88 0f       	add	r24, r24
     550:	08 f0       	brcs	.+2      	; 0x554 <__addsf3x+0x9e>
     552:	99 27       	eor	r25, r25
     554:	ee 0f       	add	r30, r30
     556:	97 95       	ror	r25
     558:	87 95       	ror	r24
     55a:	08 95       	ret

0000055c <__divsf3>:
     55c:	0c d0       	rcall	.+24     	; 0x576 <__divsf3x>
     55e:	ba c0       	rjmp	.+372    	; 0x6d4 <__fp_round>
     560:	b2 d0       	rcall	.+356    	; 0x6c6 <__fp_pscB>
     562:	40 f0       	brcs	.+16     	; 0x574 <__divsf3+0x18>
     564:	a9 d0       	rcall	.+338    	; 0x6b8 <__fp_pscA>
     566:	30 f0       	brcs	.+12     	; 0x574 <__divsf3+0x18>
     568:	21 f4       	brne	.+8      	; 0x572 <__divsf3+0x16>
     56a:	5f 3f       	cpi	r21, 0xFF	; 255
     56c:	19 f0       	breq	.+6      	; 0x574 <__divsf3+0x18>
     56e:	9b c0       	rjmp	.+310    	; 0x6a6 <__fp_inf>
     570:	51 11       	cpse	r21, r1
     572:	e4 c0       	rjmp	.+456    	; 0x73c <__fp_szero>
     574:	9e c0       	rjmp	.+316    	; 0x6b2 <__fp_nan>

00000576 <__divsf3x>:
     576:	bf d0       	rcall	.+382    	; 0x6f6 <__fp_split3>
     578:	98 f3       	brcs	.-26     	; 0x560 <__divsf3+0x4>

0000057a <__divsf3_pse>:
     57a:	99 23       	and	r25, r25
     57c:	c9 f3       	breq	.-14     	; 0x570 <__divsf3+0x14>
     57e:	55 23       	and	r21, r21
     580:	b1 f3       	breq	.-20     	; 0x56e <__divsf3+0x12>
     582:	95 1b       	sub	r25, r21
     584:	55 0b       	sbc	r21, r21
     586:	bb 27       	eor	r27, r27
     588:	aa 27       	eor	r26, r26
     58a:	62 17       	cp	r22, r18
     58c:	73 07       	cpc	r23, r19
     58e:	84 07       	cpc	r24, r20
     590:	38 f0       	brcs	.+14     	; 0x5a0 <__divsf3_pse+0x26>
     592:	9f 5f       	subi	r25, 0xFF	; 255
     594:	5f 4f       	sbci	r21, 0xFF	; 255
     596:	22 0f       	add	r18, r18
     598:	33 1f       	adc	r19, r19
     59a:	44 1f       	adc	r20, r20
     59c:	aa 1f       	adc	r26, r26
     59e:	a9 f3       	breq	.-22     	; 0x58a <__divsf3_pse+0x10>
     5a0:	33 d0       	rcall	.+102    	; 0x608 <__divsf3_pse+0x8e>
     5a2:	0e 2e       	mov	r0, r30
     5a4:	3a f0       	brmi	.+14     	; 0x5b4 <__divsf3_pse+0x3a>
     5a6:	e0 e8       	ldi	r30, 0x80	; 128
     5a8:	30 d0       	rcall	.+96     	; 0x60a <__divsf3_pse+0x90>
     5aa:	91 50       	subi	r25, 0x01	; 1
     5ac:	50 40       	sbci	r21, 0x00	; 0
     5ae:	e6 95       	lsr	r30
     5b0:	00 1c       	adc	r0, r0
     5b2:	ca f7       	brpl	.-14     	; 0x5a6 <__divsf3_pse+0x2c>
     5b4:	29 d0       	rcall	.+82     	; 0x608 <__divsf3_pse+0x8e>
     5b6:	fe 2f       	mov	r31, r30
     5b8:	27 d0       	rcall	.+78     	; 0x608 <__divsf3_pse+0x8e>
     5ba:	66 0f       	add	r22, r22
     5bc:	77 1f       	adc	r23, r23
     5be:	88 1f       	adc	r24, r24
     5c0:	bb 1f       	adc	r27, r27
     5c2:	26 17       	cp	r18, r22
     5c4:	37 07       	cpc	r19, r23
     5c6:	48 07       	cpc	r20, r24
     5c8:	ab 07       	cpc	r26, r27
     5ca:	b0 e8       	ldi	r27, 0x80	; 128
     5cc:	09 f0       	breq	.+2      	; 0x5d0 <__divsf3_pse+0x56>
     5ce:	bb 0b       	sbc	r27, r27
     5d0:	80 2d       	mov	r24, r0
     5d2:	bf 01       	movw	r22, r30
     5d4:	ff 27       	eor	r31, r31
     5d6:	93 58       	subi	r25, 0x83	; 131
     5d8:	5f 4f       	sbci	r21, 0xFF	; 255
     5da:	2a f0       	brmi	.+10     	; 0x5e6 <__divsf3_pse+0x6c>
     5dc:	9e 3f       	cpi	r25, 0xFE	; 254
     5de:	51 05       	cpc	r21, r1
     5e0:	68 f0       	brcs	.+26     	; 0x5fc <__divsf3_pse+0x82>
     5e2:	61 c0       	rjmp	.+194    	; 0x6a6 <__fp_inf>
     5e4:	ab c0       	rjmp	.+342    	; 0x73c <__fp_szero>
     5e6:	5f 3f       	cpi	r21, 0xFF	; 255
     5e8:	ec f3       	brlt	.-6      	; 0x5e4 <__divsf3_pse+0x6a>
     5ea:	98 3e       	cpi	r25, 0xE8	; 232
     5ec:	dc f3       	brlt	.-10     	; 0x5e4 <__divsf3_pse+0x6a>
     5ee:	86 95       	lsr	r24
     5f0:	77 95       	ror	r23
     5f2:	67 95       	ror	r22
     5f4:	b7 95       	ror	r27
     5f6:	f7 95       	ror	r31
     5f8:	9f 5f       	subi	r25, 0xFF	; 255
     5fa:	c9 f7       	brne	.-14     	; 0x5ee <__divsf3_pse+0x74>
     5fc:	88 0f       	add	r24, r24
     5fe:	91 1d       	adc	r25, r1
     600:	96 95       	lsr	r25
     602:	87 95       	ror	r24
     604:	97 f9       	bld	r25, 7
     606:	08 95       	ret
     608:	e1 e0       	ldi	r30, 0x01	; 1
     60a:	66 0f       	add	r22, r22
     60c:	77 1f       	adc	r23, r23
     60e:	88 1f       	adc	r24, r24
     610:	bb 1f       	adc	r27, r27
     612:	62 17       	cp	r22, r18
     614:	73 07       	cpc	r23, r19
     616:	84 07       	cpc	r24, r20
     618:	ba 07       	cpc	r27, r26
     61a:	20 f0       	brcs	.+8      	; 0x624 <__divsf3_pse+0xaa>
     61c:	62 1b       	sub	r22, r18
     61e:	73 0b       	sbc	r23, r19
     620:	84 0b       	sbc	r24, r20
     622:	ba 0b       	sbc	r27, r26
     624:	ee 1f       	adc	r30, r30
     626:	88 f7       	brcc	.-30     	; 0x60a <__divsf3_pse+0x90>
     628:	e0 95       	com	r30
     62a:	08 95       	ret

0000062c <__floatunsisf>:
     62c:	e8 94       	clt
     62e:	09 c0       	rjmp	.+18     	; 0x642 <__floatsisf+0x12>

00000630 <__floatsisf>:
     630:	97 fb       	bst	r25, 7
     632:	3e f4       	brtc	.+14     	; 0x642 <__floatsisf+0x12>
     634:	90 95       	com	r25
     636:	80 95       	com	r24
     638:	70 95       	com	r23
     63a:	61 95       	neg	r22
     63c:	7f 4f       	sbci	r23, 0xFF	; 255
     63e:	8f 4f       	sbci	r24, 0xFF	; 255
     640:	9f 4f       	sbci	r25, 0xFF	; 255
     642:	99 23       	and	r25, r25
     644:	a9 f0       	breq	.+42     	; 0x670 <__floatsisf+0x40>
     646:	f9 2f       	mov	r31, r25
     648:	96 e9       	ldi	r25, 0x96	; 150
     64a:	bb 27       	eor	r27, r27
     64c:	93 95       	inc	r25
     64e:	f6 95       	lsr	r31
     650:	87 95       	ror	r24
     652:	77 95       	ror	r23
     654:	67 95       	ror	r22
     656:	b7 95       	ror	r27
     658:	f1 11       	cpse	r31, r1
     65a:	f8 cf       	rjmp	.-16     	; 0x64c <__floatsisf+0x1c>
     65c:	fa f4       	brpl	.+62     	; 0x69c <__floatsisf+0x6c>
     65e:	bb 0f       	add	r27, r27
     660:	11 f4       	brne	.+4      	; 0x666 <__floatsisf+0x36>
     662:	60 ff       	sbrs	r22, 0
     664:	1b c0       	rjmp	.+54     	; 0x69c <__floatsisf+0x6c>
     666:	6f 5f       	subi	r22, 0xFF	; 255
     668:	7f 4f       	sbci	r23, 0xFF	; 255
     66a:	8f 4f       	sbci	r24, 0xFF	; 255
     66c:	9f 4f       	sbci	r25, 0xFF	; 255
     66e:	16 c0       	rjmp	.+44     	; 0x69c <__floatsisf+0x6c>
     670:	88 23       	and	r24, r24
     672:	11 f0       	breq	.+4      	; 0x678 <__floatsisf+0x48>
     674:	96 e9       	ldi	r25, 0x96	; 150
     676:	11 c0       	rjmp	.+34     	; 0x69a <__floatsisf+0x6a>
     678:	77 23       	and	r23, r23
     67a:	21 f0       	breq	.+8      	; 0x684 <__floatsisf+0x54>
     67c:	9e e8       	ldi	r25, 0x8E	; 142
     67e:	87 2f       	mov	r24, r23
     680:	76 2f       	mov	r23, r22
     682:	05 c0       	rjmp	.+10     	; 0x68e <__floatsisf+0x5e>
     684:	66 23       	and	r22, r22
     686:	71 f0       	breq	.+28     	; 0x6a4 <__floatsisf+0x74>
     688:	96 e8       	ldi	r25, 0x86	; 134
     68a:	86 2f       	mov	r24, r22
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	60 e0       	ldi	r22, 0x00	; 0
     690:	2a f0       	brmi	.+10     	; 0x69c <__floatsisf+0x6c>
     692:	9a 95       	dec	r25
     694:	66 0f       	add	r22, r22
     696:	77 1f       	adc	r23, r23
     698:	88 1f       	adc	r24, r24
     69a:	da f7       	brpl	.-10     	; 0x692 <__floatsisf+0x62>
     69c:	88 0f       	add	r24, r24
     69e:	96 95       	lsr	r25
     6a0:	87 95       	ror	r24
     6a2:	97 f9       	bld	r25, 7
     6a4:	08 95       	ret

000006a6 <__fp_inf>:
     6a6:	97 f9       	bld	r25, 7
     6a8:	9f 67       	ori	r25, 0x7F	; 127
     6aa:	80 e8       	ldi	r24, 0x80	; 128
     6ac:	70 e0       	ldi	r23, 0x00	; 0
     6ae:	60 e0       	ldi	r22, 0x00	; 0
     6b0:	08 95       	ret

000006b2 <__fp_nan>:
     6b2:	9f ef       	ldi	r25, 0xFF	; 255
     6b4:	80 ec       	ldi	r24, 0xC0	; 192
     6b6:	08 95       	ret

000006b8 <__fp_pscA>:
     6b8:	00 24       	eor	r0, r0
     6ba:	0a 94       	dec	r0
     6bc:	16 16       	cp	r1, r22
     6be:	17 06       	cpc	r1, r23
     6c0:	18 06       	cpc	r1, r24
     6c2:	09 06       	cpc	r0, r25
     6c4:	08 95       	ret

000006c6 <__fp_pscB>:
     6c6:	00 24       	eor	r0, r0
     6c8:	0a 94       	dec	r0
     6ca:	12 16       	cp	r1, r18
     6cc:	13 06       	cpc	r1, r19
     6ce:	14 06       	cpc	r1, r20
     6d0:	05 06       	cpc	r0, r21
     6d2:	08 95       	ret

000006d4 <__fp_round>:
     6d4:	09 2e       	mov	r0, r25
     6d6:	03 94       	inc	r0
     6d8:	00 0c       	add	r0, r0
     6da:	11 f4       	brne	.+4      	; 0x6e0 <__fp_round+0xc>
     6dc:	88 23       	and	r24, r24
     6de:	52 f0       	brmi	.+20     	; 0x6f4 <__fp_round+0x20>
     6e0:	bb 0f       	add	r27, r27
     6e2:	40 f4       	brcc	.+16     	; 0x6f4 <__fp_round+0x20>
     6e4:	bf 2b       	or	r27, r31
     6e6:	11 f4       	brne	.+4      	; 0x6ec <__fp_round+0x18>
     6e8:	60 ff       	sbrs	r22, 0
     6ea:	04 c0       	rjmp	.+8      	; 0x6f4 <__fp_round+0x20>
     6ec:	6f 5f       	subi	r22, 0xFF	; 255
     6ee:	7f 4f       	sbci	r23, 0xFF	; 255
     6f0:	8f 4f       	sbci	r24, 0xFF	; 255
     6f2:	9f 4f       	sbci	r25, 0xFF	; 255
     6f4:	08 95       	ret

000006f6 <__fp_split3>:
     6f6:	57 fd       	sbrc	r21, 7
     6f8:	90 58       	subi	r25, 0x80	; 128
     6fa:	44 0f       	add	r20, r20
     6fc:	55 1f       	adc	r21, r21
     6fe:	59 f0       	breq	.+22     	; 0x716 <__fp_splitA+0x10>
     700:	5f 3f       	cpi	r21, 0xFF	; 255
     702:	71 f0       	breq	.+28     	; 0x720 <__fp_splitA+0x1a>
     704:	47 95       	ror	r20

00000706 <__fp_splitA>:
     706:	88 0f       	add	r24, r24
     708:	97 fb       	bst	r25, 7
     70a:	99 1f       	adc	r25, r25
     70c:	61 f0       	breq	.+24     	; 0x726 <__fp_splitA+0x20>
     70e:	9f 3f       	cpi	r25, 0xFF	; 255
     710:	79 f0       	breq	.+30     	; 0x730 <__fp_splitA+0x2a>
     712:	87 95       	ror	r24
     714:	08 95       	ret
     716:	12 16       	cp	r1, r18
     718:	13 06       	cpc	r1, r19
     71a:	14 06       	cpc	r1, r20
     71c:	55 1f       	adc	r21, r21
     71e:	f2 cf       	rjmp	.-28     	; 0x704 <__fp_split3+0xe>
     720:	46 95       	lsr	r20
     722:	f1 df       	rcall	.-30     	; 0x706 <__fp_splitA>
     724:	08 c0       	rjmp	.+16     	; 0x736 <__fp_splitA+0x30>
     726:	16 16       	cp	r1, r22
     728:	17 06       	cpc	r1, r23
     72a:	18 06       	cpc	r1, r24
     72c:	99 1f       	adc	r25, r25
     72e:	f1 cf       	rjmp	.-30     	; 0x712 <__fp_splitA+0xc>
     730:	86 95       	lsr	r24
     732:	71 05       	cpc	r23, r1
     734:	61 05       	cpc	r22, r1
     736:	08 94       	sec
     738:	08 95       	ret

0000073a <__fp_zero>:
     73a:	e8 94       	clt

0000073c <__fp_szero>:
     73c:	bb 27       	eor	r27, r27
     73e:	66 27       	eor	r22, r22
     740:	77 27       	eor	r23, r23
     742:	cb 01       	movw	r24, r22
     744:	97 f9       	bld	r25, 7
     746:	08 95       	ret

00000748 <__mulsf3>:
     748:	0b d0       	rcall	.+22     	; 0x760 <__mulsf3x>
     74a:	c4 cf       	rjmp	.-120    	; 0x6d4 <__fp_round>
     74c:	b5 df       	rcall	.-150    	; 0x6b8 <__fp_pscA>
     74e:	28 f0       	brcs	.+10     	; 0x75a <__mulsf3+0x12>
     750:	ba df       	rcall	.-140    	; 0x6c6 <__fp_pscB>
     752:	18 f0       	brcs	.+6      	; 0x75a <__mulsf3+0x12>
     754:	95 23       	and	r25, r21
     756:	09 f0       	breq	.+2      	; 0x75a <__mulsf3+0x12>
     758:	a6 cf       	rjmp	.-180    	; 0x6a6 <__fp_inf>
     75a:	ab cf       	rjmp	.-170    	; 0x6b2 <__fp_nan>
     75c:	11 24       	eor	r1, r1
     75e:	ee cf       	rjmp	.-36     	; 0x73c <__fp_szero>

00000760 <__mulsf3x>:
     760:	ca df       	rcall	.-108    	; 0x6f6 <__fp_split3>
     762:	a0 f3       	brcs	.-24     	; 0x74c <__mulsf3+0x4>

00000764 <__mulsf3_pse>:
     764:	95 9f       	mul	r25, r21
     766:	d1 f3       	breq	.-12     	; 0x75c <__mulsf3+0x14>
     768:	95 0f       	add	r25, r21
     76a:	50 e0       	ldi	r21, 0x00	; 0
     76c:	55 1f       	adc	r21, r21
     76e:	62 9f       	mul	r22, r18
     770:	f0 01       	movw	r30, r0
     772:	72 9f       	mul	r23, r18
     774:	bb 27       	eor	r27, r27
     776:	f0 0d       	add	r31, r0
     778:	b1 1d       	adc	r27, r1
     77a:	63 9f       	mul	r22, r19
     77c:	aa 27       	eor	r26, r26
     77e:	f0 0d       	add	r31, r0
     780:	b1 1d       	adc	r27, r1
     782:	aa 1f       	adc	r26, r26
     784:	64 9f       	mul	r22, r20
     786:	66 27       	eor	r22, r22
     788:	b0 0d       	add	r27, r0
     78a:	a1 1d       	adc	r26, r1
     78c:	66 1f       	adc	r22, r22
     78e:	82 9f       	mul	r24, r18
     790:	22 27       	eor	r18, r18
     792:	b0 0d       	add	r27, r0
     794:	a1 1d       	adc	r26, r1
     796:	62 1f       	adc	r22, r18
     798:	73 9f       	mul	r23, r19
     79a:	b0 0d       	add	r27, r0
     79c:	a1 1d       	adc	r26, r1
     79e:	62 1f       	adc	r22, r18
     7a0:	83 9f       	mul	r24, r19
     7a2:	a0 0d       	add	r26, r0
     7a4:	61 1d       	adc	r22, r1
     7a6:	22 1f       	adc	r18, r18
     7a8:	74 9f       	mul	r23, r20
     7aa:	33 27       	eor	r19, r19
     7ac:	a0 0d       	add	r26, r0
     7ae:	61 1d       	adc	r22, r1
     7b0:	23 1f       	adc	r18, r19
     7b2:	84 9f       	mul	r24, r20
     7b4:	60 0d       	add	r22, r0
     7b6:	21 1d       	adc	r18, r1
     7b8:	82 2f       	mov	r24, r18
     7ba:	76 2f       	mov	r23, r22
     7bc:	6a 2f       	mov	r22, r26
     7be:	11 24       	eor	r1, r1
     7c0:	9f 57       	subi	r25, 0x7F	; 127
     7c2:	50 40       	sbci	r21, 0x00	; 0
     7c4:	8a f0       	brmi	.+34     	; 0x7e8 <__mulsf3_pse+0x84>
     7c6:	e1 f0       	breq	.+56     	; 0x800 <__mulsf3_pse+0x9c>
     7c8:	88 23       	and	r24, r24
     7ca:	4a f0       	brmi	.+18     	; 0x7de <__mulsf3_pse+0x7a>
     7cc:	ee 0f       	add	r30, r30
     7ce:	ff 1f       	adc	r31, r31
     7d0:	bb 1f       	adc	r27, r27
     7d2:	66 1f       	adc	r22, r22
     7d4:	77 1f       	adc	r23, r23
     7d6:	88 1f       	adc	r24, r24
     7d8:	91 50       	subi	r25, 0x01	; 1
     7da:	50 40       	sbci	r21, 0x00	; 0
     7dc:	a9 f7       	brne	.-22     	; 0x7c8 <__mulsf3_pse+0x64>
     7de:	9e 3f       	cpi	r25, 0xFE	; 254
     7e0:	51 05       	cpc	r21, r1
     7e2:	70 f0       	brcs	.+28     	; 0x800 <__mulsf3_pse+0x9c>
     7e4:	60 cf       	rjmp	.-320    	; 0x6a6 <__fp_inf>
     7e6:	aa cf       	rjmp	.-172    	; 0x73c <__fp_szero>
     7e8:	5f 3f       	cpi	r21, 0xFF	; 255
     7ea:	ec f3       	brlt	.-6      	; 0x7e6 <__mulsf3_pse+0x82>
     7ec:	98 3e       	cpi	r25, 0xE8	; 232
     7ee:	dc f3       	brlt	.-10     	; 0x7e6 <__mulsf3_pse+0x82>
     7f0:	86 95       	lsr	r24
     7f2:	77 95       	ror	r23
     7f4:	67 95       	ror	r22
     7f6:	b7 95       	ror	r27
     7f8:	f7 95       	ror	r31
     7fa:	e7 95       	ror	r30
     7fc:	9f 5f       	subi	r25, 0xFF	; 255
     7fe:	c1 f7       	brne	.-16     	; 0x7f0 <__mulsf3_pse+0x8c>
     800:	fe 2b       	or	r31, r30
     802:	88 0f       	add	r24, r24
     804:	91 1d       	adc	r25, r1
     806:	96 95       	lsr	r25
     808:	87 95       	ror	r24
     80a:	97 f9       	bld	r25, 7
     80c:	08 95       	ret

0000080e <vfprintf>:
     80e:	a3 e1       	ldi	r26, 0x13	; 19
     810:	b0 e0       	ldi	r27, 0x00	; 0
     812:	ed e0       	ldi	r30, 0x0D	; 13
     814:	f4 e0       	ldi	r31, 0x04	; 4
     816:	0c 94 82 07 	jmp	0xf04	; 0xf04 <__prologue_saves__>
     81a:	7c 01       	movw	r14, r24
     81c:	1b 01       	movw	r2, r22
     81e:	6a 01       	movw	r12, r20
     820:	fc 01       	movw	r30, r24
     822:	17 82       	std	Z+7, r1	; 0x07
     824:	16 82       	std	Z+6, r1	; 0x06
     826:	83 81       	ldd	r24, Z+3	; 0x03
     828:	81 ff       	sbrs	r24, 1
     82a:	66 c3       	rjmp	.+1740   	; 0xef8 <__stack+0x5f9>
     82c:	be 01       	movw	r22, r28
     82e:	6f 5f       	subi	r22, 0xFF	; 255
     830:	7f 4f       	sbci	r23, 0xFF	; 255
     832:	4b 01       	movw	r8, r22
     834:	f7 01       	movw	r30, r14
     836:	93 81       	ldd	r25, Z+3	; 0x03
     838:	f1 01       	movw	r30, r2
     83a:	93 fd       	sbrc	r25, 3
     83c:	85 91       	lpm	r24, Z+
     83e:	93 ff       	sbrs	r25, 3
     840:	81 91       	ld	r24, Z+
     842:	1f 01       	movw	r2, r30
     844:	88 23       	and	r24, r24
     846:	09 f4       	brne	.+2      	; 0x84a <vfprintf+0x3c>
     848:	53 c3       	rjmp	.+1702   	; 0xef0 <__stack+0x5f1>
     84a:	85 32       	cpi	r24, 0x25	; 37
     84c:	39 f4       	brne	.+14     	; 0x85c <vfprintf+0x4e>
     84e:	93 fd       	sbrc	r25, 3
     850:	85 91       	lpm	r24, Z+
     852:	93 ff       	sbrs	r25, 3
     854:	81 91       	ld	r24, Z+
     856:	1f 01       	movw	r2, r30
     858:	85 32       	cpi	r24, 0x25	; 37
     85a:	39 f4       	brne	.+14     	; 0x86a <vfprintf+0x5c>
     85c:	b7 01       	movw	r22, r14
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     864:	56 01       	movw	r10, r12
     866:	65 01       	movw	r12, r10
     868:	e5 cf       	rjmp	.-54     	; 0x834 <vfprintf+0x26>
     86a:	10 e0       	ldi	r17, 0x00	; 0
     86c:	51 2c       	mov	r5, r1
     86e:	20 e0       	ldi	r18, 0x00	; 0
     870:	20 32       	cpi	r18, 0x20	; 32
     872:	a0 f4       	brcc	.+40     	; 0x89c <vfprintf+0x8e>
     874:	8b 32       	cpi	r24, 0x2B	; 43
     876:	69 f0       	breq	.+26     	; 0x892 <vfprintf+0x84>
     878:	30 f4       	brcc	.+12     	; 0x886 <vfprintf+0x78>
     87a:	80 32       	cpi	r24, 0x20	; 32
     87c:	59 f0       	breq	.+22     	; 0x894 <vfprintf+0x86>
     87e:	83 32       	cpi	r24, 0x23	; 35
     880:	69 f4       	brne	.+26     	; 0x89c <vfprintf+0x8e>
     882:	20 61       	ori	r18, 0x10	; 16
     884:	2c c0       	rjmp	.+88     	; 0x8de <vfprintf+0xd0>
     886:	8d 32       	cpi	r24, 0x2D	; 45
     888:	39 f0       	breq	.+14     	; 0x898 <vfprintf+0x8a>
     88a:	80 33       	cpi	r24, 0x30	; 48
     88c:	39 f4       	brne	.+14     	; 0x89c <vfprintf+0x8e>
     88e:	21 60       	ori	r18, 0x01	; 1
     890:	26 c0       	rjmp	.+76     	; 0x8de <vfprintf+0xd0>
     892:	22 60       	ori	r18, 0x02	; 2
     894:	24 60       	ori	r18, 0x04	; 4
     896:	23 c0       	rjmp	.+70     	; 0x8de <vfprintf+0xd0>
     898:	28 60       	ori	r18, 0x08	; 8
     89a:	21 c0       	rjmp	.+66     	; 0x8de <vfprintf+0xd0>
     89c:	27 fd       	sbrc	r18, 7
     89e:	27 c0       	rjmp	.+78     	; 0x8ee <vfprintf+0xe0>
     8a0:	30 ed       	ldi	r19, 0xD0	; 208
     8a2:	38 0f       	add	r19, r24
     8a4:	3a 30       	cpi	r19, 0x0A	; 10
     8a6:	78 f4       	brcc	.+30     	; 0x8c6 <vfprintf+0xb8>
     8a8:	26 ff       	sbrs	r18, 6
     8aa:	06 c0       	rjmp	.+12     	; 0x8b8 <vfprintf+0xaa>
     8ac:	fa e0       	ldi	r31, 0x0A	; 10
     8ae:	1f 9f       	mul	r17, r31
     8b0:	30 0d       	add	r19, r0
     8b2:	11 24       	eor	r1, r1
     8b4:	13 2f       	mov	r17, r19
     8b6:	13 c0       	rjmp	.+38     	; 0x8de <vfprintf+0xd0>
     8b8:	6a e0       	ldi	r22, 0x0A	; 10
     8ba:	56 9e       	mul	r5, r22
     8bc:	30 0d       	add	r19, r0
     8be:	11 24       	eor	r1, r1
     8c0:	53 2e       	mov	r5, r19
     8c2:	20 62       	ori	r18, 0x20	; 32
     8c4:	0c c0       	rjmp	.+24     	; 0x8de <vfprintf+0xd0>
     8c6:	8e 32       	cpi	r24, 0x2E	; 46
     8c8:	21 f4       	brne	.+8      	; 0x8d2 <vfprintf+0xc4>
     8ca:	26 fd       	sbrc	r18, 6
     8cc:	11 c3       	rjmp	.+1570   	; 0xef0 <__stack+0x5f1>
     8ce:	20 64       	ori	r18, 0x40	; 64
     8d0:	06 c0       	rjmp	.+12     	; 0x8de <vfprintf+0xd0>
     8d2:	8c 36       	cpi	r24, 0x6C	; 108
     8d4:	11 f4       	brne	.+4      	; 0x8da <vfprintf+0xcc>
     8d6:	20 68       	ori	r18, 0x80	; 128
     8d8:	02 c0       	rjmp	.+4      	; 0x8de <vfprintf+0xd0>
     8da:	88 36       	cpi	r24, 0x68	; 104
     8dc:	41 f4       	brne	.+16     	; 0x8ee <vfprintf+0xe0>
     8de:	f1 01       	movw	r30, r2
     8e0:	93 fd       	sbrc	r25, 3
     8e2:	85 91       	lpm	r24, Z+
     8e4:	93 ff       	sbrs	r25, 3
     8e6:	81 91       	ld	r24, Z+
     8e8:	1f 01       	movw	r2, r30
     8ea:	81 11       	cpse	r24, r1
     8ec:	c1 cf       	rjmp	.-126    	; 0x870 <vfprintf+0x62>
     8ee:	9b eb       	ldi	r25, 0xBB	; 187
     8f0:	98 0f       	add	r25, r24
     8f2:	93 30       	cpi	r25, 0x03	; 3
     8f4:	18 f4       	brcc	.+6      	; 0x8fc <vfprintf+0xee>
     8f6:	20 61       	ori	r18, 0x10	; 16
     8f8:	80 5e       	subi	r24, 0xE0	; 224
     8fa:	06 c0       	rjmp	.+12     	; 0x908 <__stack+0x9>
     8fc:	9b e9       	ldi	r25, 0x9B	; 155
     8fe:	98 0f       	add	r25, r24
     900:	93 30       	cpi	r25, 0x03	; 3
     902:	08 f0       	brcs	.+2      	; 0x906 <__stack+0x7>
     904:	aa c1       	rjmp	.+852    	; 0xc5a <__stack+0x35b>
     906:	2f 7e       	andi	r18, 0xEF	; 239
     908:	26 ff       	sbrs	r18, 6
     90a:	16 e0       	ldi	r17, 0x06	; 6
     90c:	2f 73       	andi	r18, 0x3F	; 63
     90e:	72 2e       	mov	r7, r18
     910:	85 36       	cpi	r24, 0x65	; 101
     912:	21 f4       	brne	.+8      	; 0x91c <__stack+0x1d>
     914:	f2 2f       	mov	r31, r18
     916:	f0 64       	ori	r31, 0x40	; 64
     918:	7f 2e       	mov	r7, r31
     91a:	08 c0       	rjmp	.+16     	; 0x92c <__stack+0x2d>
     91c:	86 36       	cpi	r24, 0x66	; 102
     91e:	21 f4       	brne	.+8      	; 0x928 <__stack+0x29>
     920:	62 2f       	mov	r22, r18
     922:	60 68       	ori	r22, 0x80	; 128
     924:	76 2e       	mov	r7, r22
     926:	02 c0       	rjmp	.+4      	; 0x92c <__stack+0x2d>
     928:	11 11       	cpse	r17, r1
     92a:	11 50       	subi	r17, 0x01	; 1
     92c:	77 fe       	sbrs	r7, 7
     92e:	07 c0       	rjmp	.+14     	; 0x93e <__stack+0x3f>
     930:	1c 33       	cpi	r17, 0x3C	; 60
     932:	48 f4       	brcc	.+18     	; 0x946 <__stack+0x47>
     934:	44 24       	eor	r4, r4
     936:	43 94       	inc	r4
     938:	41 0e       	add	r4, r17
     93a:	27 e0       	ldi	r18, 0x07	; 7
     93c:	0b c0       	rjmp	.+22     	; 0x954 <__stack+0x55>
     93e:	18 30       	cpi	r17, 0x08	; 8
     940:	30 f4       	brcc	.+12     	; 0x94e <__stack+0x4f>
     942:	21 2f       	mov	r18, r17
     944:	06 c0       	rjmp	.+12     	; 0x952 <__stack+0x53>
     946:	27 e0       	ldi	r18, 0x07	; 7
     948:	4c e3       	ldi	r20, 0x3C	; 60
     94a:	44 2e       	mov	r4, r20
     94c:	03 c0       	rjmp	.+6      	; 0x954 <__stack+0x55>
     94e:	27 e0       	ldi	r18, 0x07	; 7
     950:	17 e0       	ldi	r17, 0x07	; 7
     952:	41 2c       	mov	r4, r1
     954:	56 01       	movw	r10, r12
     956:	74 e0       	ldi	r23, 0x04	; 4
     958:	a7 0e       	add	r10, r23
     95a:	b1 1c       	adc	r11, r1
     95c:	f6 01       	movw	r30, r12
     95e:	60 81       	ld	r22, Z
     960:	71 81       	ldd	r23, Z+1	; 0x01
     962:	82 81       	ldd	r24, Z+2	; 0x02
     964:	93 81       	ldd	r25, Z+3	; 0x03
     966:	04 2d       	mov	r16, r4
     968:	a4 01       	movw	r20, r8
     96a:	0e 94 b9 07 	call	0xf72	; 0xf72 <__ftoa_engine>
     96e:	6c 01       	movw	r12, r24
     970:	09 81       	ldd	r16, Y+1	; 0x01
     972:	00 ff       	sbrs	r16, 0
     974:	02 c0       	rjmp	.+4      	; 0x97a <__stack+0x7b>
     976:	03 ff       	sbrs	r16, 3
     978:	06 c0       	rjmp	.+12     	; 0x986 <__stack+0x87>
     97a:	71 fc       	sbrc	r7, 1
     97c:	07 c0       	rjmp	.+14     	; 0x98c <__stack+0x8d>
     97e:	72 fc       	sbrc	r7, 2
     980:	08 c0       	rjmp	.+16     	; 0x992 <__stack+0x93>
     982:	61 2c       	mov	r6, r1
     984:	08 c0       	rjmp	.+16     	; 0x996 <__stack+0x97>
     986:	3d e2       	ldi	r19, 0x2D	; 45
     988:	63 2e       	mov	r6, r19
     98a:	05 c0       	rjmp	.+10     	; 0x996 <__stack+0x97>
     98c:	2b e2       	ldi	r18, 0x2B	; 43
     98e:	62 2e       	mov	r6, r18
     990:	02 c0       	rjmp	.+4      	; 0x996 <__stack+0x97>
     992:	90 e2       	ldi	r25, 0x20	; 32
     994:	69 2e       	mov	r6, r25
     996:	80 2f       	mov	r24, r16
     998:	8c 70       	andi	r24, 0x0C	; 12
     99a:	99 f1       	breq	.+102    	; 0xa02 <__stack+0x103>
     99c:	66 20       	and	r6, r6
     99e:	11 f0       	breq	.+4      	; 0x9a4 <__stack+0xa5>
     9a0:	84 e0       	ldi	r24, 0x04	; 4
     9a2:	01 c0       	rjmp	.+2      	; 0x9a6 <__stack+0xa7>
     9a4:	83 e0       	ldi	r24, 0x03	; 3
     9a6:	85 15       	cp	r24, r5
     9a8:	10 f0       	brcs	.+4      	; 0x9ae <__stack+0xaf>
     9aa:	51 2c       	mov	r5, r1
     9ac:	0b c0       	rjmp	.+22     	; 0x9c4 <__stack+0xc5>
     9ae:	58 1a       	sub	r5, r24
     9b0:	73 fc       	sbrc	r7, 3
     9b2:	08 c0       	rjmp	.+16     	; 0x9c4 <__stack+0xc5>
     9b4:	b7 01       	movw	r22, r14
     9b6:	80 e2       	ldi	r24, 0x20	; 32
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     9be:	5a 94       	dec	r5
     9c0:	c9 f7       	brne	.-14     	; 0x9b4 <__stack+0xb5>
     9c2:	f3 cf       	rjmp	.-26     	; 0x9aa <__stack+0xab>
     9c4:	66 20       	and	r6, r6
     9c6:	29 f0       	breq	.+10     	; 0x9d2 <__stack+0xd3>
     9c8:	b7 01       	movw	r22, r14
     9ca:	86 2d       	mov	r24, r6
     9cc:	90 e0       	ldi	r25, 0x00	; 0
     9ce:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     9d2:	03 fd       	sbrc	r16, 3
     9d4:	03 c0       	rjmp	.+6      	; 0x9dc <__stack+0xdd>
     9d6:	0c e6       	ldi	r16, 0x6C	; 108
     9d8:	10 e0       	ldi	r17, 0x00	; 0
     9da:	02 c0       	rjmp	.+4      	; 0x9e0 <__stack+0xe1>
     9dc:	08 e6       	ldi	r16, 0x68	; 104
     9de:	10 e0       	ldi	r17, 0x00	; 0
     9e0:	f7 2d       	mov	r31, r7
     9e2:	f0 71       	andi	r31, 0x10	; 16
     9e4:	7f 2e       	mov	r7, r31
     9e6:	f8 01       	movw	r30, r16
     9e8:	84 91       	lpm	r24, Z
     9ea:	88 23       	and	r24, r24
     9ec:	09 f4       	brne	.+2      	; 0x9f0 <__stack+0xf1>
     9ee:	76 c2       	rjmp	.+1260   	; 0xedc <__stack+0x5dd>
     9f0:	71 10       	cpse	r7, r1
     9f2:	80 52       	subi	r24, 0x20	; 32
     9f4:	b7 01       	movw	r22, r14
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     9fc:	0f 5f       	subi	r16, 0xFF	; 255
     9fe:	1f 4f       	sbci	r17, 0xFF	; 255
     a00:	f2 cf       	rjmp	.-28     	; 0x9e6 <__stack+0xe7>
     a02:	77 fe       	sbrs	r7, 7
     a04:	0f c0       	rjmp	.+30     	; 0xa24 <__stack+0x125>
     a06:	4c 0c       	add	r4, r12
     a08:	04 ff       	sbrs	r16, 4
     a0a:	04 c0       	rjmp	.+8      	; 0xa14 <__stack+0x115>
     a0c:	8a 81       	ldd	r24, Y+2	; 0x02
     a0e:	81 33       	cpi	r24, 0x31	; 49
     a10:	09 f4       	brne	.+2      	; 0xa14 <__stack+0x115>
     a12:	4a 94       	dec	r4
     a14:	14 14       	cp	r1, r4
     a16:	74 f5       	brge	.+92     	; 0xa74 <__stack+0x175>
     a18:	f8 e0       	ldi	r31, 0x08	; 8
     a1a:	f4 15       	cp	r31, r4
     a1c:	78 f5       	brcc	.+94     	; 0xa7c <__stack+0x17d>
     a1e:	88 e0       	ldi	r24, 0x08	; 8
     a20:	48 2e       	mov	r4, r24
     a22:	2c c0       	rjmp	.+88     	; 0xa7c <__stack+0x17d>
     a24:	76 fc       	sbrc	r7, 6
     a26:	2a c0       	rjmp	.+84     	; 0xa7c <__stack+0x17d>
     a28:	81 2f       	mov	r24, r17
     a2a:	90 e0       	ldi	r25, 0x00	; 0
     a2c:	8c 15       	cp	r24, r12
     a2e:	9d 05       	cpc	r25, r13
     a30:	9c f0       	brlt	.+38     	; 0xa58 <__stack+0x159>
     a32:	6c ef       	ldi	r22, 0xFC	; 252
     a34:	c6 16       	cp	r12, r22
     a36:	6f ef       	ldi	r22, 0xFF	; 255
     a38:	d6 06       	cpc	r13, r22
     a3a:	74 f0       	brlt	.+28     	; 0xa58 <__stack+0x159>
     a3c:	77 2d       	mov	r23, r7
     a3e:	70 68       	ori	r23, 0x80	; 128
     a40:	77 2e       	mov	r7, r23
     a42:	0a c0       	rjmp	.+20     	; 0xa58 <__stack+0x159>
     a44:	e2 e0       	ldi	r30, 0x02	; 2
     a46:	f0 e0       	ldi	r31, 0x00	; 0
     a48:	ec 0f       	add	r30, r28
     a4a:	fd 1f       	adc	r31, r29
     a4c:	e1 0f       	add	r30, r17
     a4e:	f1 1d       	adc	r31, r1
     a50:	80 81       	ld	r24, Z
     a52:	80 33       	cpi	r24, 0x30	; 48
     a54:	19 f4       	brne	.+6      	; 0xa5c <__stack+0x15d>
     a56:	11 50       	subi	r17, 0x01	; 1
     a58:	11 11       	cpse	r17, r1
     a5a:	f4 cf       	rjmp	.-24     	; 0xa44 <__stack+0x145>
     a5c:	77 fe       	sbrs	r7, 7
     a5e:	0e c0       	rjmp	.+28     	; 0xa7c <__stack+0x17d>
     a60:	44 24       	eor	r4, r4
     a62:	43 94       	inc	r4
     a64:	41 0e       	add	r4, r17
     a66:	81 2f       	mov	r24, r17
     a68:	90 e0       	ldi	r25, 0x00	; 0
     a6a:	c8 16       	cp	r12, r24
     a6c:	d9 06       	cpc	r13, r25
     a6e:	2c f4       	brge	.+10     	; 0xa7a <__stack+0x17b>
     a70:	1c 19       	sub	r17, r12
     a72:	04 c0       	rjmp	.+8      	; 0xa7c <__stack+0x17d>
     a74:	44 24       	eor	r4, r4
     a76:	43 94       	inc	r4
     a78:	01 c0       	rjmp	.+2      	; 0xa7c <__stack+0x17d>
     a7a:	10 e0       	ldi	r17, 0x00	; 0
     a7c:	77 fe       	sbrs	r7, 7
     a7e:	07 c0       	rjmp	.+14     	; 0xa8e <__stack+0x18f>
     a80:	1c 14       	cp	r1, r12
     a82:	1d 04       	cpc	r1, r13
     a84:	3c f4       	brge	.+14     	; 0xa94 <__stack+0x195>
     a86:	96 01       	movw	r18, r12
     a88:	2f 5f       	subi	r18, 0xFF	; 255
     a8a:	3f 4f       	sbci	r19, 0xFF	; 255
     a8c:	05 c0       	rjmp	.+10     	; 0xa98 <__stack+0x199>
     a8e:	25 e0       	ldi	r18, 0x05	; 5
     a90:	30 e0       	ldi	r19, 0x00	; 0
     a92:	02 c0       	rjmp	.+4      	; 0xa98 <__stack+0x199>
     a94:	21 e0       	ldi	r18, 0x01	; 1
     a96:	30 e0       	ldi	r19, 0x00	; 0
     a98:	66 20       	and	r6, r6
     a9a:	11 f0       	breq	.+4      	; 0xaa0 <__stack+0x1a1>
     a9c:	2f 5f       	subi	r18, 0xFF	; 255
     a9e:	3f 4f       	sbci	r19, 0xFF	; 255
     aa0:	11 23       	and	r17, r17
     aa2:	31 f0       	breq	.+12     	; 0xab0 <__stack+0x1b1>
     aa4:	41 2f       	mov	r20, r17
     aa6:	50 e0       	ldi	r21, 0x00	; 0
     aa8:	4f 5f       	subi	r20, 0xFF	; 255
     aaa:	5f 4f       	sbci	r21, 0xFF	; 255
     aac:	24 0f       	add	r18, r20
     aae:	35 1f       	adc	r19, r21
     ab0:	45 2d       	mov	r20, r5
     ab2:	50 e0       	ldi	r21, 0x00	; 0
     ab4:	24 17       	cp	r18, r20
     ab6:	35 07       	cpc	r19, r21
     ab8:	14 f4       	brge	.+4      	; 0xabe <__stack+0x1bf>
     aba:	52 1a       	sub	r5, r18
     abc:	01 c0       	rjmp	.+2      	; 0xac0 <__stack+0x1c1>
     abe:	51 2c       	mov	r5, r1
     ac0:	87 2d       	mov	r24, r7
     ac2:	89 70       	andi	r24, 0x09	; 9
     ac4:	49 f4       	brne	.+18     	; 0xad8 <__stack+0x1d9>
     ac6:	55 20       	and	r5, r5
     ac8:	39 f0       	breq	.+14     	; 0xad8 <__stack+0x1d9>
     aca:	b7 01       	movw	r22, r14
     acc:	80 e2       	ldi	r24, 0x20	; 32
     ace:	90 e0       	ldi	r25, 0x00	; 0
     ad0:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     ad4:	5a 94       	dec	r5
     ad6:	f7 cf       	rjmp	.-18     	; 0xac6 <__stack+0x1c7>
     ad8:	66 20       	and	r6, r6
     ada:	29 f0       	breq	.+10     	; 0xae6 <__stack+0x1e7>
     adc:	b7 01       	movw	r22, r14
     ade:	86 2d       	mov	r24, r6
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     ae6:	73 fc       	sbrc	r7, 3
     ae8:	09 c0       	rjmp	.+18     	; 0xafc <__stack+0x1fd>
     aea:	55 20       	and	r5, r5
     aec:	39 f0       	breq	.+14     	; 0xafc <__stack+0x1fd>
     aee:	b7 01       	movw	r22, r14
     af0:	80 e3       	ldi	r24, 0x30	; 48
     af2:	90 e0       	ldi	r25, 0x00	; 0
     af4:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     af8:	5a 94       	dec	r5
     afa:	f7 cf       	rjmp	.-18     	; 0xaea <__stack+0x1eb>
     afc:	77 fe       	sbrs	r7, 7
     afe:	5f c0       	rjmp	.+190    	; 0xbbe <__stack+0x2bf>
     b00:	9c 2d       	mov	r25, r12
     b02:	8d 2d       	mov	r24, r13
     b04:	d7 fe       	sbrs	r13, 7
     b06:	02 c0       	rjmp	.+4      	; 0xb0c <__stack+0x20d>
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	80 e0       	ldi	r24, 0x00	; 0
     b0c:	69 2e       	mov	r6, r25
     b0e:	78 2e       	mov	r7, r24
     b10:	40 e0       	ldi	r20, 0x00	; 0
     b12:	50 e0       	ldi	r21, 0x00	; 0
     b14:	c6 01       	movw	r24, r12
     b16:	84 19       	sub	r24, r4
     b18:	91 09       	sbc	r25, r1
     b1a:	9d 87       	std	Y+13, r25	; 0x0d
     b1c:	8c 87       	std	Y+12, r24	; 0x0c
     b1e:	96 01       	movw	r18, r12
     b20:	26 19       	sub	r18, r6
     b22:	37 09       	sbc	r19, r7
     b24:	28 0d       	add	r18, r8
     b26:	39 1d       	adc	r19, r9
     b28:	81 2f       	mov	r24, r17
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	ee 27       	eor	r30, r30
     b2e:	ff 27       	eor	r31, r31
     b30:	e8 1b       	sub	r30, r24
     b32:	f9 0b       	sbc	r31, r25
     b34:	ff 87       	std	Y+15, r31	; 0x0f
     b36:	ee 87       	std	Y+14, r30	; 0x0e
     b38:	ff ef       	ldi	r31, 0xFF	; 255
     b3a:	6f 16       	cp	r6, r31
     b3c:	7f 06       	cpc	r7, r31
     b3e:	69 f4       	brne	.+26     	; 0xb5a <__stack+0x25b>
     b40:	b7 01       	movw	r22, r14
     b42:	8e e2       	ldi	r24, 0x2E	; 46
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	2b 8b       	std	Y+19, r18	; 0x13
     b48:	3a 8b       	std	Y+18, r19	; 0x12
     b4a:	48 8b       	std	Y+16, r20	; 0x10
     b4c:	59 8b       	std	Y+17, r21	; 0x11
     b4e:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     b52:	59 89       	ldd	r21, Y+17	; 0x11
     b54:	48 89       	ldd	r20, Y+16	; 0x10
     b56:	3a 89       	ldd	r19, Y+18	; 0x12
     b58:	2b 89       	ldd	r18, Y+19	; 0x13
     b5a:	c6 14       	cp	r12, r6
     b5c:	d7 04       	cpc	r13, r7
     b5e:	54 f0       	brlt	.+20     	; 0xb74 <__stack+0x275>
     b60:	6c 85       	ldd	r22, Y+12	; 0x0c
     b62:	7d 85       	ldd	r23, Y+13	; 0x0d
     b64:	66 15       	cp	r22, r6
     b66:	77 05       	cpc	r23, r7
     b68:	2c f4       	brge	.+10     	; 0xb74 <__stack+0x275>
     b6a:	f9 01       	movw	r30, r18
     b6c:	e4 0f       	add	r30, r20
     b6e:	f5 1f       	adc	r31, r21
     b70:	81 81       	ldd	r24, Z+1	; 0x01
     b72:	01 c0       	rjmp	.+2      	; 0xb76 <__stack+0x277>
     b74:	80 e3       	ldi	r24, 0x30	; 48
     b76:	71 e0       	ldi	r23, 0x01	; 1
     b78:	67 1a       	sub	r6, r23
     b7a:	71 08       	sbc	r7, r1
     b7c:	4f 5f       	subi	r20, 0xFF	; 255
     b7e:	5f 4f       	sbci	r21, 0xFF	; 255
     b80:	ee 85       	ldd	r30, Y+14	; 0x0e
     b82:	ff 85       	ldd	r31, Y+15	; 0x0f
     b84:	6e 16       	cp	r6, r30
     b86:	7f 06       	cpc	r7, r31
     b88:	6c f0       	brlt	.+26     	; 0xba4 <__stack+0x2a5>
     b8a:	b7 01       	movw	r22, r14
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	2b 8b       	std	Y+19, r18	; 0x13
     b90:	3a 8b       	std	Y+18, r19	; 0x12
     b92:	48 8b       	std	Y+16, r20	; 0x10
     b94:	59 8b       	std	Y+17, r21	; 0x11
     b96:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     b9a:	2b 89       	ldd	r18, Y+19	; 0x13
     b9c:	3a 89       	ldd	r19, Y+18	; 0x12
     b9e:	48 89       	ldd	r20, Y+16	; 0x10
     ba0:	59 89       	ldd	r21, Y+17	; 0x11
     ba2:	ca cf       	rjmp	.-108    	; 0xb38 <__stack+0x239>
     ba4:	6c 14       	cp	r6, r12
     ba6:	7d 04       	cpc	r7, r13
     ba8:	39 f4       	brne	.+14     	; 0xbb8 <__stack+0x2b9>
     baa:	9a 81       	ldd	r25, Y+2	; 0x02
     bac:	96 33       	cpi	r25, 0x36	; 54
     bae:	18 f4       	brcc	.+6      	; 0xbb6 <__stack+0x2b7>
     bb0:	95 33       	cpi	r25, 0x35	; 53
     bb2:	11 f4       	brne	.+4      	; 0xbb8 <__stack+0x2b9>
     bb4:	04 ff       	sbrs	r16, 4
     bb6:	81 e3       	ldi	r24, 0x31	; 49
     bb8:	b7 01       	movw	r22, r14
     bba:	90 e0       	ldi	r25, 0x00	; 0
     bbc:	4b c0       	rjmp	.+150    	; 0xc54 <__stack+0x355>
     bbe:	8a 81       	ldd	r24, Y+2	; 0x02
     bc0:	81 33       	cpi	r24, 0x31	; 49
     bc2:	09 f0       	breq	.+2      	; 0xbc6 <__stack+0x2c7>
     bc4:	0f 7e       	andi	r16, 0xEF	; 239
     bc6:	b7 01       	movw	r22, r14
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     bce:	11 11       	cpse	r17, r1
     bd0:	05 c0       	rjmp	.+10     	; 0xbdc <__stack+0x2dd>
     bd2:	74 fe       	sbrs	r7, 4
     bd4:	18 c0       	rjmp	.+48     	; 0xc06 <__stack+0x307>
     bd6:	85 e4       	ldi	r24, 0x45	; 69
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	17 c0       	rjmp	.+46     	; 0xc0a <__stack+0x30b>
     bdc:	b7 01       	movw	r22, r14
     bde:	8e e2       	ldi	r24, 0x2E	; 46
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     be6:	82 e0       	ldi	r24, 0x02	; 2
     be8:	66 24       	eor	r6, r6
     bea:	63 94       	inc	r6
     bec:	68 0e       	add	r6, r24
     bee:	f4 01       	movw	r30, r8
     bf0:	e8 0f       	add	r30, r24
     bf2:	f1 1d       	adc	r31, r1
     bf4:	80 81       	ld	r24, Z
     bf6:	b7 01       	movw	r22, r14
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     bfe:	11 50       	subi	r17, 0x01	; 1
     c00:	41 f3       	breq	.-48     	; 0xbd2 <__stack+0x2d3>
     c02:	86 2d       	mov	r24, r6
     c04:	f1 cf       	rjmp	.-30     	; 0xbe8 <__stack+0x2e9>
     c06:	85 e6       	ldi	r24, 0x65	; 101
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	b7 01       	movw	r22, r14
     c0c:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     c10:	d7 fc       	sbrc	r13, 7
     c12:	05 c0       	rjmp	.+10     	; 0xc1e <__stack+0x31f>
     c14:	c1 14       	cp	r12, r1
     c16:	d1 04       	cpc	r13, r1
     c18:	39 f4       	brne	.+14     	; 0xc28 <__stack+0x329>
     c1a:	04 ff       	sbrs	r16, 4
     c1c:	05 c0       	rjmp	.+10     	; 0xc28 <__stack+0x329>
     c1e:	d1 94       	neg	r13
     c20:	c1 94       	neg	r12
     c22:	d1 08       	sbc	r13, r1
     c24:	8d e2       	ldi	r24, 0x2D	; 45
     c26:	01 c0       	rjmp	.+2      	; 0xc2a <__stack+0x32b>
     c28:	8b e2       	ldi	r24, 0x2B	; 43
     c2a:	b7 01       	movw	r22, r14
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     c32:	80 e3       	ldi	r24, 0x30	; 48
     c34:	6a e0       	ldi	r22, 0x0A	; 10
     c36:	c6 16       	cp	r12, r22
     c38:	d1 04       	cpc	r13, r1
     c3a:	2c f0       	brlt	.+10     	; 0xc46 <__stack+0x347>
     c3c:	8f 5f       	subi	r24, 0xFF	; 255
     c3e:	fa e0       	ldi	r31, 0x0A	; 10
     c40:	cf 1a       	sub	r12, r31
     c42:	d1 08       	sbc	r13, r1
     c44:	f7 cf       	rjmp	.-18     	; 0xc34 <__stack+0x335>
     c46:	b7 01       	movw	r22, r14
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     c4e:	b7 01       	movw	r22, r14
     c50:	c6 01       	movw	r24, r12
     c52:	c0 96       	adiw	r24, 0x30	; 48
     c54:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     c58:	41 c1       	rjmp	.+642    	; 0xedc <__stack+0x5dd>
     c5a:	83 36       	cpi	r24, 0x63	; 99
     c5c:	31 f0       	breq	.+12     	; 0xc6a <__stack+0x36b>
     c5e:	83 37       	cpi	r24, 0x73	; 115
     c60:	79 f0       	breq	.+30     	; 0xc80 <__stack+0x381>
     c62:	83 35       	cpi	r24, 0x53	; 83
     c64:	09 f0       	breq	.+2      	; 0xc68 <__stack+0x369>
     c66:	58 c0       	rjmp	.+176    	; 0xd18 <__stack+0x419>
     c68:	21 c0       	rjmp	.+66     	; 0xcac <__stack+0x3ad>
     c6a:	56 01       	movw	r10, r12
     c6c:	72 e0       	ldi	r23, 0x02	; 2
     c6e:	a7 0e       	add	r10, r23
     c70:	b1 1c       	adc	r11, r1
     c72:	f6 01       	movw	r30, r12
     c74:	80 81       	ld	r24, Z
     c76:	89 83       	std	Y+1, r24	; 0x01
     c78:	01 e0       	ldi	r16, 0x01	; 1
     c7a:	10 e0       	ldi	r17, 0x00	; 0
     c7c:	64 01       	movw	r12, r8
     c7e:	14 c0       	rjmp	.+40     	; 0xca8 <__stack+0x3a9>
     c80:	56 01       	movw	r10, r12
     c82:	f2 e0       	ldi	r31, 0x02	; 2
     c84:	af 0e       	add	r10, r31
     c86:	b1 1c       	adc	r11, r1
     c88:	f6 01       	movw	r30, r12
     c8a:	c0 80       	ld	r12, Z
     c8c:	d1 80       	ldd	r13, Z+1	; 0x01
     c8e:	26 ff       	sbrs	r18, 6
     c90:	03 c0       	rjmp	.+6      	; 0xc98 <__stack+0x399>
     c92:	61 2f       	mov	r22, r17
     c94:	70 e0       	ldi	r23, 0x00	; 0
     c96:	02 c0       	rjmp	.+4      	; 0xc9c <__stack+0x39d>
     c98:	6f ef       	ldi	r22, 0xFF	; 255
     c9a:	7f ef       	ldi	r23, 0xFF	; 255
     c9c:	c6 01       	movw	r24, r12
     c9e:	2b 8b       	std	Y+19, r18	; 0x13
     ca0:	0e 94 9c 08 	call	0x1138	; 0x1138 <strnlen>
     ca4:	8c 01       	movw	r16, r24
     ca6:	2b 89       	ldd	r18, Y+19	; 0x13
     ca8:	2f 77       	andi	r18, 0x7F	; 127
     caa:	15 c0       	rjmp	.+42     	; 0xcd6 <__stack+0x3d7>
     cac:	56 01       	movw	r10, r12
     cae:	f2 e0       	ldi	r31, 0x02	; 2
     cb0:	af 0e       	add	r10, r31
     cb2:	b1 1c       	adc	r11, r1
     cb4:	f6 01       	movw	r30, r12
     cb6:	c0 80       	ld	r12, Z
     cb8:	d1 80       	ldd	r13, Z+1	; 0x01
     cba:	26 ff       	sbrs	r18, 6
     cbc:	03 c0       	rjmp	.+6      	; 0xcc4 <__stack+0x3c5>
     cbe:	61 2f       	mov	r22, r17
     cc0:	70 e0       	ldi	r23, 0x00	; 0
     cc2:	02 c0       	rjmp	.+4      	; 0xcc8 <__stack+0x3c9>
     cc4:	6f ef       	ldi	r22, 0xFF	; 255
     cc6:	7f ef       	ldi	r23, 0xFF	; 255
     cc8:	c6 01       	movw	r24, r12
     cca:	2b 8b       	std	Y+19, r18	; 0x13
     ccc:	0e 94 91 08 	call	0x1122	; 0x1122 <strnlen_P>
     cd0:	8c 01       	movw	r16, r24
     cd2:	2b 89       	ldd	r18, Y+19	; 0x13
     cd4:	20 68       	ori	r18, 0x80	; 128
     cd6:	72 2e       	mov	r7, r18
     cd8:	23 fd       	sbrc	r18, 3
     cda:	1a c0       	rjmp	.+52     	; 0xd10 <__stack+0x411>
     cdc:	85 2d       	mov	r24, r5
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	08 17       	cp	r16, r24
     ce2:	19 07       	cpc	r17, r25
     ce4:	a8 f4       	brcc	.+42     	; 0xd10 <__stack+0x411>
     ce6:	b7 01       	movw	r22, r14
     ce8:	80 e2       	ldi	r24, 0x20	; 32
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     cf0:	5a 94       	dec	r5
     cf2:	f4 cf       	rjmp	.-24     	; 0xcdc <__stack+0x3dd>
     cf4:	f6 01       	movw	r30, r12
     cf6:	77 fc       	sbrc	r7, 7
     cf8:	85 91       	lpm	r24, Z+
     cfa:	77 fe       	sbrs	r7, 7
     cfc:	81 91       	ld	r24, Z+
     cfe:	6f 01       	movw	r12, r30
     d00:	b7 01       	movw	r22, r14
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     d08:	51 10       	cpse	r5, r1
     d0a:	5a 94       	dec	r5
     d0c:	01 50       	subi	r16, 0x01	; 1
     d0e:	11 09       	sbc	r17, r1
     d10:	01 15       	cp	r16, r1
     d12:	11 05       	cpc	r17, r1
     d14:	79 f7       	brne	.-34     	; 0xcf4 <__stack+0x3f5>
     d16:	e2 c0       	rjmp	.+452    	; 0xedc <__stack+0x5dd>
     d18:	84 36       	cpi	r24, 0x64	; 100
     d1a:	11 f0       	breq	.+4      	; 0xd20 <__stack+0x421>
     d1c:	89 36       	cpi	r24, 0x69	; 105
     d1e:	51 f5       	brne	.+84     	; 0xd74 <__stack+0x475>
     d20:	56 01       	movw	r10, r12
     d22:	27 ff       	sbrs	r18, 7
     d24:	09 c0       	rjmp	.+18     	; 0xd38 <__stack+0x439>
     d26:	f4 e0       	ldi	r31, 0x04	; 4
     d28:	af 0e       	add	r10, r31
     d2a:	b1 1c       	adc	r11, r1
     d2c:	f6 01       	movw	r30, r12
     d2e:	60 81       	ld	r22, Z
     d30:	71 81       	ldd	r23, Z+1	; 0x01
     d32:	82 81       	ldd	r24, Z+2	; 0x02
     d34:	93 81       	ldd	r25, Z+3	; 0x03
     d36:	0a c0       	rjmp	.+20     	; 0xd4c <__stack+0x44d>
     d38:	f2 e0       	ldi	r31, 0x02	; 2
     d3a:	af 0e       	add	r10, r31
     d3c:	b1 1c       	adc	r11, r1
     d3e:	f6 01       	movw	r30, r12
     d40:	60 81       	ld	r22, Z
     d42:	71 81       	ldd	r23, Z+1	; 0x01
     d44:	88 27       	eor	r24, r24
     d46:	77 fd       	sbrc	r23, 7
     d48:	80 95       	com	r24
     d4a:	98 2f       	mov	r25, r24
     d4c:	02 2f       	mov	r16, r18
     d4e:	0f 76       	andi	r16, 0x6F	; 111
     d50:	97 ff       	sbrs	r25, 7
     d52:	08 c0       	rjmp	.+16     	; 0xd64 <__stack+0x465>
     d54:	90 95       	com	r25
     d56:	80 95       	com	r24
     d58:	70 95       	com	r23
     d5a:	61 95       	neg	r22
     d5c:	7f 4f       	sbci	r23, 0xFF	; 255
     d5e:	8f 4f       	sbci	r24, 0xFF	; 255
     d60:	9f 4f       	sbci	r25, 0xFF	; 255
     d62:	00 68       	ori	r16, 0x80	; 128
     d64:	2a e0       	ldi	r18, 0x0A	; 10
     d66:	30 e0       	ldi	r19, 0x00	; 0
     d68:	a4 01       	movw	r20, r8
     d6a:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <__ultoa_invert>
     d6e:	c8 2e       	mov	r12, r24
     d70:	c8 18       	sub	r12, r8
     d72:	3e c0       	rjmp	.+124    	; 0xdf0 <__stack+0x4f1>
     d74:	02 2f       	mov	r16, r18
     d76:	85 37       	cpi	r24, 0x75	; 117
     d78:	21 f4       	brne	.+8      	; 0xd82 <__stack+0x483>
     d7a:	0f 7e       	andi	r16, 0xEF	; 239
     d7c:	2a e0       	ldi	r18, 0x0A	; 10
     d7e:	30 e0       	ldi	r19, 0x00	; 0
     d80:	1d c0       	rjmp	.+58     	; 0xdbc <__stack+0x4bd>
     d82:	09 7f       	andi	r16, 0xF9	; 249
     d84:	8f 36       	cpi	r24, 0x6F	; 111
     d86:	91 f0       	breq	.+36     	; 0xdac <__stack+0x4ad>
     d88:	18 f4       	brcc	.+6      	; 0xd90 <__stack+0x491>
     d8a:	88 35       	cpi	r24, 0x58	; 88
     d8c:	59 f0       	breq	.+22     	; 0xda4 <__stack+0x4a5>
     d8e:	b0 c0       	rjmp	.+352    	; 0xef0 <__stack+0x5f1>
     d90:	80 37       	cpi	r24, 0x70	; 112
     d92:	19 f0       	breq	.+6      	; 0xd9a <__stack+0x49b>
     d94:	88 37       	cpi	r24, 0x78	; 120
     d96:	11 f0       	breq	.+4      	; 0xd9c <__stack+0x49d>
     d98:	ab c0       	rjmp	.+342    	; 0xef0 <__stack+0x5f1>
     d9a:	00 61       	ori	r16, 0x10	; 16
     d9c:	04 ff       	sbrs	r16, 4
     d9e:	09 c0       	rjmp	.+18     	; 0xdb2 <__stack+0x4b3>
     da0:	04 60       	ori	r16, 0x04	; 4
     da2:	07 c0       	rjmp	.+14     	; 0xdb2 <__stack+0x4b3>
     da4:	24 ff       	sbrs	r18, 4
     da6:	08 c0       	rjmp	.+16     	; 0xdb8 <__stack+0x4b9>
     da8:	06 60       	ori	r16, 0x06	; 6
     daa:	06 c0       	rjmp	.+12     	; 0xdb8 <__stack+0x4b9>
     dac:	28 e0       	ldi	r18, 0x08	; 8
     dae:	30 e0       	ldi	r19, 0x00	; 0
     db0:	05 c0       	rjmp	.+10     	; 0xdbc <__stack+0x4bd>
     db2:	20 e1       	ldi	r18, 0x10	; 16
     db4:	30 e0       	ldi	r19, 0x00	; 0
     db6:	02 c0       	rjmp	.+4      	; 0xdbc <__stack+0x4bd>
     db8:	20 e1       	ldi	r18, 0x10	; 16
     dba:	32 e0       	ldi	r19, 0x02	; 2
     dbc:	56 01       	movw	r10, r12
     dbe:	07 ff       	sbrs	r16, 7
     dc0:	09 c0       	rjmp	.+18     	; 0xdd4 <__stack+0x4d5>
     dc2:	f4 e0       	ldi	r31, 0x04	; 4
     dc4:	af 0e       	add	r10, r31
     dc6:	b1 1c       	adc	r11, r1
     dc8:	f6 01       	movw	r30, r12
     dca:	60 81       	ld	r22, Z
     dcc:	71 81       	ldd	r23, Z+1	; 0x01
     dce:	82 81       	ldd	r24, Z+2	; 0x02
     dd0:	93 81       	ldd	r25, Z+3	; 0x03
     dd2:	08 c0       	rjmp	.+16     	; 0xde4 <__stack+0x4e5>
     dd4:	f2 e0       	ldi	r31, 0x02	; 2
     dd6:	af 0e       	add	r10, r31
     dd8:	b1 1c       	adc	r11, r1
     dda:	f6 01       	movw	r30, r12
     ddc:	60 81       	ld	r22, Z
     dde:	71 81       	ldd	r23, Z+1	; 0x01
     de0:	80 e0       	ldi	r24, 0x00	; 0
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	a4 01       	movw	r20, r8
     de6:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <__ultoa_invert>
     dea:	c8 2e       	mov	r12, r24
     dec:	c8 18       	sub	r12, r8
     dee:	0f 77       	andi	r16, 0x7F	; 127
     df0:	06 ff       	sbrs	r16, 6
     df2:	0b c0       	rjmp	.+22     	; 0xe0a <__stack+0x50b>
     df4:	20 2f       	mov	r18, r16
     df6:	2e 7f       	andi	r18, 0xFE	; 254
     df8:	c1 16       	cp	r12, r17
     dfa:	50 f4       	brcc	.+20     	; 0xe10 <__stack+0x511>
     dfc:	04 ff       	sbrs	r16, 4
     dfe:	0a c0       	rjmp	.+20     	; 0xe14 <__stack+0x515>
     e00:	02 fd       	sbrc	r16, 2
     e02:	08 c0       	rjmp	.+16     	; 0xe14 <__stack+0x515>
     e04:	20 2f       	mov	r18, r16
     e06:	2e 7e       	andi	r18, 0xEE	; 238
     e08:	05 c0       	rjmp	.+10     	; 0xe14 <__stack+0x515>
     e0a:	dc 2c       	mov	r13, r12
     e0c:	20 2f       	mov	r18, r16
     e0e:	03 c0       	rjmp	.+6      	; 0xe16 <__stack+0x517>
     e10:	dc 2c       	mov	r13, r12
     e12:	01 c0       	rjmp	.+2      	; 0xe16 <__stack+0x517>
     e14:	d1 2e       	mov	r13, r17
     e16:	24 ff       	sbrs	r18, 4
     e18:	0d c0       	rjmp	.+26     	; 0xe34 <__stack+0x535>
     e1a:	fe 01       	movw	r30, r28
     e1c:	ec 0d       	add	r30, r12
     e1e:	f1 1d       	adc	r31, r1
     e20:	80 81       	ld	r24, Z
     e22:	80 33       	cpi	r24, 0x30	; 48
     e24:	11 f4       	brne	.+4      	; 0xe2a <__stack+0x52b>
     e26:	29 7e       	andi	r18, 0xE9	; 233
     e28:	09 c0       	rjmp	.+18     	; 0xe3c <__stack+0x53d>
     e2a:	22 ff       	sbrs	r18, 2
     e2c:	06 c0       	rjmp	.+12     	; 0xe3a <__stack+0x53b>
     e2e:	d3 94       	inc	r13
     e30:	d3 94       	inc	r13
     e32:	04 c0       	rjmp	.+8      	; 0xe3c <__stack+0x53d>
     e34:	82 2f       	mov	r24, r18
     e36:	86 78       	andi	r24, 0x86	; 134
     e38:	09 f0       	breq	.+2      	; 0xe3c <__stack+0x53d>
     e3a:	d3 94       	inc	r13
     e3c:	23 fd       	sbrc	r18, 3
     e3e:	13 c0       	rjmp	.+38     	; 0xe66 <__stack+0x567>
     e40:	20 ff       	sbrs	r18, 0
     e42:	06 c0       	rjmp	.+12     	; 0xe50 <__stack+0x551>
     e44:	1c 2d       	mov	r17, r12
     e46:	d5 14       	cp	r13, r5
     e48:	18 f4       	brcc	.+6      	; 0xe50 <__stack+0x551>
     e4a:	15 0d       	add	r17, r5
     e4c:	1d 19       	sub	r17, r13
     e4e:	d5 2c       	mov	r13, r5
     e50:	d5 14       	cp	r13, r5
     e52:	68 f4       	brcc	.+26     	; 0xe6e <__stack+0x56f>
     e54:	b7 01       	movw	r22, r14
     e56:	80 e2       	ldi	r24, 0x20	; 32
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	2b 8b       	std	Y+19, r18	; 0x13
     e5c:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     e60:	d3 94       	inc	r13
     e62:	2b 89       	ldd	r18, Y+19	; 0x13
     e64:	f5 cf       	rjmp	.-22     	; 0xe50 <__stack+0x551>
     e66:	d5 14       	cp	r13, r5
     e68:	10 f4       	brcc	.+4      	; 0xe6e <__stack+0x56f>
     e6a:	5d 18       	sub	r5, r13
     e6c:	01 c0       	rjmp	.+2      	; 0xe70 <__stack+0x571>
     e6e:	51 2c       	mov	r5, r1
     e70:	24 ff       	sbrs	r18, 4
     e72:	12 c0       	rjmp	.+36     	; 0xe98 <__stack+0x599>
     e74:	b7 01       	movw	r22, r14
     e76:	80 e3       	ldi	r24, 0x30	; 48
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	2b 8b       	std	Y+19, r18	; 0x13
     e7c:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     e80:	2b 89       	ldd	r18, Y+19	; 0x13
     e82:	22 ff       	sbrs	r18, 2
     e84:	17 c0       	rjmp	.+46     	; 0xeb4 <__stack+0x5b5>
     e86:	21 ff       	sbrs	r18, 1
     e88:	03 c0       	rjmp	.+6      	; 0xe90 <__stack+0x591>
     e8a:	88 e5       	ldi	r24, 0x58	; 88
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	02 c0       	rjmp	.+4      	; 0xe94 <__stack+0x595>
     e90:	88 e7       	ldi	r24, 0x78	; 120
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	b7 01       	movw	r22, r14
     e96:	0c c0       	rjmp	.+24     	; 0xeb0 <__stack+0x5b1>
     e98:	82 2f       	mov	r24, r18
     e9a:	86 78       	andi	r24, 0x86	; 134
     e9c:	59 f0       	breq	.+22     	; 0xeb4 <__stack+0x5b5>
     e9e:	21 fd       	sbrc	r18, 1
     ea0:	02 c0       	rjmp	.+4      	; 0xea6 <__stack+0x5a7>
     ea2:	80 e2       	ldi	r24, 0x20	; 32
     ea4:	01 c0       	rjmp	.+2      	; 0xea8 <__stack+0x5a9>
     ea6:	8b e2       	ldi	r24, 0x2B	; 43
     ea8:	27 fd       	sbrc	r18, 7
     eaa:	8d e2       	ldi	r24, 0x2D	; 45
     eac:	b7 01       	movw	r22, r14
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     eb4:	c1 16       	cp	r12, r17
     eb6:	38 f4       	brcc	.+14     	; 0xec6 <__stack+0x5c7>
     eb8:	b7 01       	movw	r22, r14
     eba:	80 e3       	ldi	r24, 0x30	; 48
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     ec2:	11 50       	subi	r17, 0x01	; 1
     ec4:	f7 cf       	rjmp	.-18     	; 0xeb4 <__stack+0x5b5>
     ec6:	ca 94       	dec	r12
     ec8:	f4 01       	movw	r30, r8
     eca:	ec 0d       	add	r30, r12
     ecc:	f1 1d       	adc	r31, r1
     ece:	80 81       	ld	r24, Z
     ed0:	b7 01       	movw	r22, r14
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     ed8:	c1 10       	cpse	r12, r1
     eda:	f5 cf       	rjmp	.-22     	; 0xec6 <__stack+0x5c7>
     edc:	55 20       	and	r5, r5
     ede:	09 f4       	brne	.+2      	; 0xee2 <__stack+0x5e3>
     ee0:	c2 cc       	rjmp	.-1660   	; 0x866 <vfprintf+0x58>
     ee2:	b7 01       	movw	r22, r14
     ee4:	80 e2       	ldi	r24, 0x20	; 32
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	0e 94 a7 08 	call	0x114e	; 0x114e <fputc>
     eec:	5a 94       	dec	r5
     eee:	f6 cf       	rjmp	.-20     	; 0xedc <__stack+0x5dd>
     ef0:	f7 01       	movw	r30, r14
     ef2:	86 81       	ldd	r24, Z+6	; 0x06
     ef4:	97 81       	ldd	r25, Z+7	; 0x07
     ef6:	02 c0       	rjmp	.+4      	; 0xefc <__stack+0x5fd>
     ef8:	8f ef       	ldi	r24, 0xFF	; 255
     efa:	9f ef       	ldi	r25, 0xFF	; 255
     efc:	63 96       	adiw	r28, 0x13	; 19
     efe:	e2 e1       	ldi	r30, 0x12	; 18
     f00:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <__epilogue_restores__>

00000f04 <__prologue_saves__>:
     f04:	2f 92       	push	r2
     f06:	3f 92       	push	r3
     f08:	4f 92       	push	r4
     f0a:	5f 92       	push	r5
     f0c:	6f 92       	push	r6
     f0e:	7f 92       	push	r7
     f10:	8f 92       	push	r8
     f12:	9f 92       	push	r9
     f14:	af 92       	push	r10
     f16:	bf 92       	push	r11
     f18:	cf 92       	push	r12
     f1a:	df 92       	push	r13
     f1c:	ef 92       	push	r14
     f1e:	ff 92       	push	r15
     f20:	0f 93       	push	r16
     f22:	1f 93       	push	r17
     f24:	cf 93       	push	r28
     f26:	df 93       	push	r29
     f28:	cd b7       	in	r28, 0x3d	; 61
     f2a:	de b7       	in	r29, 0x3e	; 62
     f2c:	ca 1b       	sub	r28, r26
     f2e:	db 0b       	sbc	r29, r27
     f30:	0f b6       	in	r0, 0x3f	; 63
     f32:	f8 94       	cli
     f34:	de bf       	out	0x3e, r29	; 62
     f36:	0f be       	out	0x3f, r0	; 63
     f38:	cd bf       	out	0x3d, r28	; 61
     f3a:	09 94       	ijmp

00000f3c <__epilogue_restores__>:
     f3c:	2a 88       	ldd	r2, Y+18	; 0x12
     f3e:	39 88       	ldd	r3, Y+17	; 0x11
     f40:	48 88       	ldd	r4, Y+16	; 0x10
     f42:	5f 84       	ldd	r5, Y+15	; 0x0f
     f44:	6e 84       	ldd	r6, Y+14	; 0x0e
     f46:	7d 84       	ldd	r7, Y+13	; 0x0d
     f48:	8c 84       	ldd	r8, Y+12	; 0x0c
     f4a:	9b 84       	ldd	r9, Y+11	; 0x0b
     f4c:	aa 84       	ldd	r10, Y+10	; 0x0a
     f4e:	b9 84       	ldd	r11, Y+9	; 0x09
     f50:	c8 84       	ldd	r12, Y+8	; 0x08
     f52:	df 80       	ldd	r13, Y+7	; 0x07
     f54:	ee 80       	ldd	r14, Y+6	; 0x06
     f56:	fd 80       	ldd	r15, Y+5	; 0x05
     f58:	0c 81       	ldd	r16, Y+4	; 0x04
     f5a:	1b 81       	ldd	r17, Y+3	; 0x03
     f5c:	aa 81       	ldd	r26, Y+2	; 0x02
     f5e:	b9 81       	ldd	r27, Y+1	; 0x01
     f60:	ce 0f       	add	r28, r30
     f62:	d1 1d       	adc	r29, r1
     f64:	0f b6       	in	r0, 0x3f	; 63
     f66:	f8 94       	cli
     f68:	de bf       	out	0x3e, r29	; 62
     f6a:	0f be       	out	0x3f, r0	; 63
     f6c:	cd bf       	out	0x3d, r28	; 61
     f6e:	ed 01       	movw	r28, r26
     f70:	08 95       	ret

00000f72 <__ftoa_engine>:
     f72:	28 30       	cpi	r18, 0x08	; 8
     f74:	08 f0       	brcs	.+2      	; 0xf78 <__ftoa_engine+0x6>
     f76:	27 e0       	ldi	r18, 0x07	; 7
     f78:	33 27       	eor	r19, r19
     f7a:	da 01       	movw	r26, r20
     f7c:	99 0f       	add	r25, r25
     f7e:	31 1d       	adc	r19, r1
     f80:	87 fd       	sbrc	r24, 7
     f82:	91 60       	ori	r25, 0x01	; 1
     f84:	00 96       	adiw	r24, 0x00	; 0
     f86:	61 05       	cpc	r22, r1
     f88:	71 05       	cpc	r23, r1
     f8a:	39 f4       	brne	.+14     	; 0xf9a <__ftoa_engine+0x28>
     f8c:	32 60       	ori	r19, 0x02	; 2
     f8e:	2e 5f       	subi	r18, 0xFE	; 254
     f90:	3d 93       	st	X+, r19
     f92:	30 e3       	ldi	r19, 0x30	; 48
     f94:	2a 95       	dec	r18
     f96:	e1 f7       	brne	.-8      	; 0xf90 <__ftoa_engine+0x1e>
     f98:	08 95       	ret
     f9a:	9f 3f       	cpi	r25, 0xFF	; 255
     f9c:	30 f0       	brcs	.+12     	; 0xfaa <__ftoa_engine+0x38>
     f9e:	80 38       	cpi	r24, 0x80	; 128
     fa0:	71 05       	cpc	r23, r1
     fa2:	61 05       	cpc	r22, r1
     fa4:	09 f0       	breq	.+2      	; 0xfa8 <__ftoa_engine+0x36>
     fa6:	3c 5f       	subi	r19, 0xFC	; 252
     fa8:	3c 5f       	subi	r19, 0xFC	; 252
     faa:	3d 93       	st	X+, r19
     fac:	91 30       	cpi	r25, 0x01	; 1
     fae:	08 f0       	brcs	.+2      	; 0xfb2 <__ftoa_engine+0x40>
     fb0:	80 68       	ori	r24, 0x80	; 128
     fb2:	91 1d       	adc	r25, r1
     fb4:	df 93       	push	r29
     fb6:	cf 93       	push	r28
     fb8:	1f 93       	push	r17
     fba:	0f 93       	push	r16
     fbc:	ff 92       	push	r15
     fbe:	ef 92       	push	r14
     fc0:	19 2f       	mov	r17, r25
     fc2:	98 7f       	andi	r25, 0xF8	; 248
     fc4:	96 95       	lsr	r25
     fc6:	e9 2f       	mov	r30, r25
     fc8:	96 95       	lsr	r25
     fca:	96 95       	lsr	r25
     fcc:	e9 0f       	add	r30, r25
     fce:	ff 27       	eor	r31, r31
     fd0:	e6 53       	subi	r30, 0x36	; 54
     fd2:	ff 4f       	sbci	r31, 0xFF	; 255
     fd4:	99 27       	eor	r25, r25
     fd6:	33 27       	eor	r19, r19
     fd8:	ee 24       	eor	r14, r14
     fda:	ff 24       	eor	r15, r15
     fdc:	a7 01       	movw	r20, r14
     fde:	e7 01       	movw	r28, r14
     fe0:	05 90       	lpm	r0, Z+
     fe2:	08 94       	sec
     fe4:	07 94       	ror	r0
     fe6:	28 f4       	brcc	.+10     	; 0xff2 <__ftoa_engine+0x80>
     fe8:	36 0f       	add	r19, r22
     fea:	e7 1e       	adc	r14, r23
     fec:	f8 1e       	adc	r15, r24
     fee:	49 1f       	adc	r20, r25
     ff0:	51 1d       	adc	r21, r1
     ff2:	66 0f       	add	r22, r22
     ff4:	77 1f       	adc	r23, r23
     ff6:	88 1f       	adc	r24, r24
     ff8:	99 1f       	adc	r25, r25
     ffa:	06 94       	lsr	r0
     ffc:	a1 f7       	brne	.-24     	; 0xfe6 <__ftoa_engine+0x74>
     ffe:	05 90       	lpm	r0, Z+
    1000:	07 94       	ror	r0
    1002:	28 f4       	brcc	.+10     	; 0x100e <__ftoa_engine+0x9c>
    1004:	e7 0e       	add	r14, r23
    1006:	f8 1e       	adc	r15, r24
    1008:	49 1f       	adc	r20, r25
    100a:	56 1f       	adc	r21, r22
    100c:	c1 1d       	adc	r28, r1
    100e:	77 0f       	add	r23, r23
    1010:	88 1f       	adc	r24, r24
    1012:	99 1f       	adc	r25, r25
    1014:	66 1f       	adc	r22, r22
    1016:	06 94       	lsr	r0
    1018:	a1 f7       	brne	.-24     	; 0x1002 <__ftoa_engine+0x90>
    101a:	05 90       	lpm	r0, Z+
    101c:	07 94       	ror	r0
    101e:	28 f4       	brcc	.+10     	; 0x102a <__ftoa_engine+0xb8>
    1020:	f8 0e       	add	r15, r24
    1022:	49 1f       	adc	r20, r25
    1024:	56 1f       	adc	r21, r22
    1026:	c7 1f       	adc	r28, r23
    1028:	d1 1d       	adc	r29, r1
    102a:	88 0f       	add	r24, r24
    102c:	99 1f       	adc	r25, r25
    102e:	66 1f       	adc	r22, r22
    1030:	77 1f       	adc	r23, r23
    1032:	06 94       	lsr	r0
    1034:	a1 f7       	brne	.-24     	; 0x101e <__ftoa_engine+0xac>
    1036:	05 90       	lpm	r0, Z+
    1038:	07 94       	ror	r0
    103a:	20 f4       	brcc	.+8      	; 0x1044 <__ftoa_engine+0xd2>
    103c:	49 0f       	add	r20, r25
    103e:	56 1f       	adc	r21, r22
    1040:	c7 1f       	adc	r28, r23
    1042:	d8 1f       	adc	r29, r24
    1044:	99 0f       	add	r25, r25
    1046:	66 1f       	adc	r22, r22
    1048:	77 1f       	adc	r23, r23
    104a:	88 1f       	adc	r24, r24
    104c:	06 94       	lsr	r0
    104e:	a9 f7       	brne	.-22     	; 0x103a <__ftoa_engine+0xc8>
    1050:	84 91       	lpm	r24, Z
    1052:	10 95       	com	r17
    1054:	17 70       	andi	r17, 0x07	; 7
    1056:	41 f0       	breq	.+16     	; 0x1068 <__ftoa_engine+0xf6>
    1058:	d6 95       	lsr	r29
    105a:	c7 95       	ror	r28
    105c:	57 95       	ror	r21
    105e:	47 95       	ror	r20
    1060:	f7 94       	ror	r15
    1062:	e7 94       	ror	r14
    1064:	1a 95       	dec	r17
    1066:	c1 f7       	brne	.-16     	; 0x1058 <__ftoa_engine+0xe6>
    1068:	e0 e7       	ldi	r30, 0x70	; 112
    106a:	f0 e0       	ldi	r31, 0x00	; 0
    106c:	68 94       	set
    106e:	15 90       	lpm	r1, Z+
    1070:	15 91       	lpm	r17, Z+
    1072:	35 91       	lpm	r19, Z+
    1074:	65 91       	lpm	r22, Z+
    1076:	95 91       	lpm	r25, Z+
    1078:	05 90       	lpm	r0, Z+
    107a:	7f e2       	ldi	r23, 0x2F	; 47
    107c:	73 95       	inc	r23
    107e:	e1 18       	sub	r14, r1
    1080:	f1 0a       	sbc	r15, r17
    1082:	43 0b       	sbc	r20, r19
    1084:	56 0b       	sbc	r21, r22
    1086:	c9 0b       	sbc	r28, r25
    1088:	d0 09       	sbc	r29, r0
    108a:	c0 f7       	brcc	.-16     	; 0x107c <__ftoa_engine+0x10a>
    108c:	e1 0c       	add	r14, r1
    108e:	f1 1e       	adc	r15, r17
    1090:	43 1f       	adc	r20, r19
    1092:	56 1f       	adc	r21, r22
    1094:	c9 1f       	adc	r28, r25
    1096:	d0 1d       	adc	r29, r0
    1098:	7e f4       	brtc	.+30     	; 0x10b8 <__ftoa_engine+0x146>
    109a:	70 33       	cpi	r23, 0x30	; 48
    109c:	11 f4       	brne	.+4      	; 0x10a2 <__ftoa_engine+0x130>
    109e:	8a 95       	dec	r24
    10a0:	e6 cf       	rjmp	.-52     	; 0x106e <__ftoa_engine+0xfc>
    10a2:	e8 94       	clt
    10a4:	01 50       	subi	r16, 0x01	; 1
    10a6:	30 f0       	brcs	.+12     	; 0x10b4 <__ftoa_engine+0x142>
    10a8:	08 0f       	add	r16, r24
    10aa:	0a f4       	brpl	.+2      	; 0x10ae <__ftoa_engine+0x13c>
    10ac:	00 27       	eor	r16, r16
    10ae:	02 17       	cp	r16, r18
    10b0:	08 f4       	brcc	.+2      	; 0x10b4 <__ftoa_engine+0x142>
    10b2:	20 2f       	mov	r18, r16
    10b4:	23 95       	inc	r18
    10b6:	02 2f       	mov	r16, r18
    10b8:	7a 33       	cpi	r23, 0x3A	; 58
    10ba:	28 f0       	brcs	.+10     	; 0x10c6 <__ftoa_engine+0x154>
    10bc:	79 e3       	ldi	r23, 0x39	; 57
    10be:	7d 93       	st	X+, r23
    10c0:	2a 95       	dec	r18
    10c2:	e9 f7       	brne	.-6      	; 0x10be <__ftoa_engine+0x14c>
    10c4:	10 c0       	rjmp	.+32     	; 0x10e6 <__ftoa_engine+0x174>
    10c6:	7d 93       	st	X+, r23
    10c8:	2a 95       	dec	r18
    10ca:	89 f6       	brne	.-94     	; 0x106e <__ftoa_engine+0xfc>
    10cc:	06 94       	lsr	r0
    10ce:	97 95       	ror	r25
    10d0:	67 95       	ror	r22
    10d2:	37 95       	ror	r19
    10d4:	17 95       	ror	r17
    10d6:	17 94       	ror	r1
    10d8:	e1 18       	sub	r14, r1
    10da:	f1 0a       	sbc	r15, r17
    10dc:	43 0b       	sbc	r20, r19
    10de:	56 0b       	sbc	r21, r22
    10e0:	c9 0b       	sbc	r28, r25
    10e2:	d0 09       	sbc	r29, r0
    10e4:	98 f0       	brcs	.+38     	; 0x110c <__ftoa_engine+0x19a>
    10e6:	23 95       	inc	r18
    10e8:	7e 91       	ld	r23, -X
    10ea:	73 95       	inc	r23
    10ec:	7a 33       	cpi	r23, 0x3A	; 58
    10ee:	08 f0       	brcs	.+2      	; 0x10f2 <__ftoa_engine+0x180>
    10f0:	70 e3       	ldi	r23, 0x30	; 48
    10f2:	7c 93       	st	X, r23
    10f4:	20 13       	cpse	r18, r16
    10f6:	b8 f7       	brcc	.-18     	; 0x10e6 <__ftoa_engine+0x174>
    10f8:	7e 91       	ld	r23, -X
    10fa:	70 61       	ori	r23, 0x10	; 16
    10fc:	7d 93       	st	X+, r23
    10fe:	30 f0       	brcs	.+12     	; 0x110c <__ftoa_engine+0x19a>
    1100:	83 95       	inc	r24
    1102:	71 e3       	ldi	r23, 0x31	; 49
    1104:	7d 93       	st	X+, r23
    1106:	70 e3       	ldi	r23, 0x30	; 48
    1108:	2a 95       	dec	r18
    110a:	e1 f7       	brne	.-8      	; 0x1104 <__ftoa_engine+0x192>
    110c:	11 24       	eor	r1, r1
    110e:	ef 90       	pop	r14
    1110:	ff 90       	pop	r15
    1112:	0f 91       	pop	r16
    1114:	1f 91       	pop	r17
    1116:	cf 91       	pop	r28
    1118:	df 91       	pop	r29
    111a:	99 27       	eor	r25, r25
    111c:	87 fd       	sbrc	r24, 7
    111e:	90 95       	com	r25
    1120:	08 95       	ret

00001122 <strnlen_P>:
    1122:	fc 01       	movw	r30, r24
    1124:	05 90       	lpm	r0, Z+
    1126:	61 50       	subi	r22, 0x01	; 1
    1128:	70 40       	sbci	r23, 0x00	; 0
    112a:	01 10       	cpse	r0, r1
    112c:	d8 f7       	brcc	.-10     	; 0x1124 <strnlen_P+0x2>
    112e:	80 95       	com	r24
    1130:	90 95       	com	r25
    1132:	8e 0f       	add	r24, r30
    1134:	9f 1f       	adc	r25, r31
    1136:	08 95       	ret

00001138 <strnlen>:
    1138:	fc 01       	movw	r30, r24
    113a:	61 50       	subi	r22, 0x01	; 1
    113c:	70 40       	sbci	r23, 0x00	; 0
    113e:	01 90       	ld	r0, Z+
    1140:	01 10       	cpse	r0, r1
    1142:	d8 f7       	brcc	.-10     	; 0x113a <strnlen+0x2>
    1144:	80 95       	com	r24
    1146:	90 95       	com	r25
    1148:	8e 0f       	add	r24, r30
    114a:	9f 1f       	adc	r25, r31
    114c:	08 95       	ret

0000114e <fputc>:
    114e:	0f 93       	push	r16
    1150:	1f 93       	push	r17
    1152:	cf 93       	push	r28
    1154:	df 93       	push	r29
    1156:	18 2f       	mov	r17, r24
    1158:	09 2f       	mov	r16, r25
    115a:	eb 01       	movw	r28, r22
    115c:	8b 81       	ldd	r24, Y+3	; 0x03
    115e:	81 fd       	sbrc	r24, 1
    1160:	03 c0       	rjmp	.+6      	; 0x1168 <fputc+0x1a>
    1162:	8f ef       	ldi	r24, 0xFF	; 255
    1164:	9f ef       	ldi	r25, 0xFF	; 255
    1166:	20 c0       	rjmp	.+64     	; 0x11a8 <fputc+0x5a>
    1168:	82 ff       	sbrs	r24, 2
    116a:	10 c0       	rjmp	.+32     	; 0x118c <fputc+0x3e>
    116c:	4e 81       	ldd	r20, Y+6	; 0x06
    116e:	5f 81       	ldd	r21, Y+7	; 0x07
    1170:	2c 81       	ldd	r18, Y+4	; 0x04
    1172:	3d 81       	ldd	r19, Y+5	; 0x05
    1174:	42 17       	cp	r20, r18
    1176:	53 07       	cpc	r21, r19
    1178:	7c f4       	brge	.+30     	; 0x1198 <fputc+0x4a>
    117a:	e8 81       	ld	r30, Y
    117c:	f9 81       	ldd	r31, Y+1	; 0x01
    117e:	9f 01       	movw	r18, r30
    1180:	2f 5f       	subi	r18, 0xFF	; 255
    1182:	3f 4f       	sbci	r19, 0xFF	; 255
    1184:	39 83       	std	Y+1, r19	; 0x01
    1186:	28 83       	st	Y, r18
    1188:	10 83       	st	Z, r17
    118a:	06 c0       	rjmp	.+12     	; 0x1198 <fputc+0x4a>
    118c:	e8 85       	ldd	r30, Y+8	; 0x08
    118e:	f9 85       	ldd	r31, Y+9	; 0x09
    1190:	81 2f       	mov	r24, r17
    1192:	09 95       	icall
    1194:	89 2b       	or	r24, r25
    1196:	29 f7       	brne	.-54     	; 0x1162 <fputc+0x14>
    1198:	2e 81       	ldd	r18, Y+6	; 0x06
    119a:	3f 81       	ldd	r19, Y+7	; 0x07
    119c:	2f 5f       	subi	r18, 0xFF	; 255
    119e:	3f 4f       	sbci	r19, 0xFF	; 255
    11a0:	3f 83       	std	Y+7, r19	; 0x07
    11a2:	2e 83       	std	Y+6, r18	; 0x06
    11a4:	81 2f       	mov	r24, r17
    11a6:	90 2f       	mov	r25, r16
    11a8:	df 91       	pop	r29
    11aa:	cf 91       	pop	r28
    11ac:	1f 91       	pop	r17
    11ae:	0f 91       	pop	r16
    11b0:	08 95       	ret

000011b2 <sprintf>:
    11b2:	ae e0       	ldi	r26, 0x0E	; 14
    11b4:	b0 e0       	ldi	r27, 0x00	; 0
    11b6:	ef ed       	ldi	r30, 0xDF	; 223
    11b8:	f8 e0       	ldi	r31, 0x08	; 8
    11ba:	0c 94 90 07 	jmp	0xf20	; 0xf20 <__prologue_saves__+0x1c>
    11be:	0d 89       	ldd	r16, Y+21	; 0x15
    11c0:	1e 89       	ldd	r17, Y+22	; 0x16
    11c2:	86 e0       	ldi	r24, 0x06	; 6
    11c4:	8c 83       	std	Y+4, r24	; 0x04
    11c6:	1a 83       	std	Y+2, r17	; 0x02
    11c8:	09 83       	std	Y+1, r16	; 0x01
    11ca:	8f ef       	ldi	r24, 0xFF	; 255
    11cc:	9f e7       	ldi	r25, 0x7F	; 127
    11ce:	9e 83       	std	Y+6, r25	; 0x06
    11d0:	8d 83       	std	Y+5, r24	; 0x05
    11d2:	ae 01       	movw	r20, r28
    11d4:	47 5e       	subi	r20, 0xE7	; 231
    11d6:	5f 4f       	sbci	r21, 0xFF	; 255
    11d8:	6f 89       	ldd	r22, Y+23	; 0x17
    11da:	78 8d       	ldd	r23, Y+24	; 0x18
    11dc:	ce 01       	movw	r24, r28
    11de:	01 96       	adiw	r24, 0x01	; 1
    11e0:	0e 94 07 04 	call	0x80e	; 0x80e <vfprintf>
    11e4:	ef 81       	ldd	r30, Y+7	; 0x07
    11e6:	f8 85       	ldd	r31, Y+8	; 0x08
    11e8:	e0 0f       	add	r30, r16
    11ea:	f1 1f       	adc	r31, r17
    11ec:	10 82       	st	Z, r1
    11ee:	2e 96       	adiw	r28, 0x0e	; 14
    11f0:	e4 e0       	ldi	r30, 0x04	; 4
    11f2:	0c 94 ac 07 	jmp	0xf58	; 0xf58 <__epilogue_restores__+0x1c>

000011f6 <__ultoa_invert>:
    11f6:	fa 01       	movw	r30, r20
    11f8:	aa 27       	eor	r26, r26
    11fa:	28 30       	cpi	r18, 0x08	; 8
    11fc:	51 f1       	breq	.+84     	; 0x1252 <__ultoa_invert+0x5c>
    11fe:	20 31       	cpi	r18, 0x10	; 16
    1200:	81 f1       	breq	.+96     	; 0x1262 <__ultoa_invert+0x6c>
    1202:	e8 94       	clt
    1204:	6f 93       	push	r22
    1206:	6e 7f       	andi	r22, 0xFE	; 254
    1208:	6e 5f       	subi	r22, 0xFE	; 254
    120a:	7f 4f       	sbci	r23, 0xFF	; 255
    120c:	8f 4f       	sbci	r24, 0xFF	; 255
    120e:	9f 4f       	sbci	r25, 0xFF	; 255
    1210:	af 4f       	sbci	r26, 0xFF	; 255
    1212:	b1 e0       	ldi	r27, 0x01	; 1
    1214:	3e d0       	rcall	.+124    	; 0x1292 <__ultoa_invert+0x9c>
    1216:	b4 e0       	ldi	r27, 0x04	; 4
    1218:	3c d0       	rcall	.+120    	; 0x1292 <__ultoa_invert+0x9c>
    121a:	67 0f       	add	r22, r23
    121c:	78 1f       	adc	r23, r24
    121e:	89 1f       	adc	r24, r25
    1220:	9a 1f       	adc	r25, r26
    1222:	a1 1d       	adc	r26, r1
    1224:	68 0f       	add	r22, r24
    1226:	79 1f       	adc	r23, r25
    1228:	8a 1f       	adc	r24, r26
    122a:	91 1d       	adc	r25, r1
    122c:	a1 1d       	adc	r26, r1
    122e:	6a 0f       	add	r22, r26
    1230:	71 1d       	adc	r23, r1
    1232:	81 1d       	adc	r24, r1
    1234:	91 1d       	adc	r25, r1
    1236:	a1 1d       	adc	r26, r1
    1238:	20 d0       	rcall	.+64     	; 0x127a <__ultoa_invert+0x84>
    123a:	09 f4       	brne	.+2      	; 0x123e <__ultoa_invert+0x48>
    123c:	68 94       	set
    123e:	3f 91       	pop	r19
    1240:	2a e0       	ldi	r18, 0x0A	; 10
    1242:	26 9f       	mul	r18, r22
    1244:	11 24       	eor	r1, r1
    1246:	30 19       	sub	r19, r0
    1248:	30 5d       	subi	r19, 0xD0	; 208
    124a:	31 93       	st	Z+, r19
    124c:	de f6       	brtc	.-74     	; 0x1204 <__ultoa_invert+0xe>
    124e:	cf 01       	movw	r24, r30
    1250:	08 95       	ret
    1252:	46 2f       	mov	r20, r22
    1254:	47 70       	andi	r20, 0x07	; 7
    1256:	40 5d       	subi	r20, 0xD0	; 208
    1258:	41 93       	st	Z+, r20
    125a:	b3 e0       	ldi	r27, 0x03	; 3
    125c:	0f d0       	rcall	.+30     	; 0x127c <__ultoa_invert+0x86>
    125e:	c9 f7       	brne	.-14     	; 0x1252 <__ultoa_invert+0x5c>
    1260:	f6 cf       	rjmp	.-20     	; 0x124e <__ultoa_invert+0x58>
    1262:	46 2f       	mov	r20, r22
    1264:	4f 70       	andi	r20, 0x0F	; 15
    1266:	40 5d       	subi	r20, 0xD0	; 208
    1268:	4a 33       	cpi	r20, 0x3A	; 58
    126a:	18 f0       	brcs	.+6      	; 0x1272 <__ultoa_invert+0x7c>
    126c:	49 5d       	subi	r20, 0xD9	; 217
    126e:	31 fd       	sbrc	r19, 1
    1270:	40 52       	subi	r20, 0x20	; 32
    1272:	41 93       	st	Z+, r20
    1274:	02 d0       	rcall	.+4      	; 0x127a <__ultoa_invert+0x84>
    1276:	a9 f7       	brne	.-22     	; 0x1262 <__ultoa_invert+0x6c>
    1278:	ea cf       	rjmp	.-44     	; 0x124e <__ultoa_invert+0x58>
    127a:	b4 e0       	ldi	r27, 0x04	; 4
    127c:	a6 95       	lsr	r26
    127e:	97 95       	ror	r25
    1280:	87 95       	ror	r24
    1282:	77 95       	ror	r23
    1284:	67 95       	ror	r22
    1286:	ba 95       	dec	r27
    1288:	c9 f7       	brne	.-14     	; 0x127c <__ultoa_invert+0x86>
    128a:	00 97       	sbiw	r24, 0x00	; 0
    128c:	61 05       	cpc	r22, r1
    128e:	71 05       	cpc	r23, r1
    1290:	08 95       	ret
    1292:	9b 01       	movw	r18, r22
    1294:	ac 01       	movw	r20, r24
    1296:	0a 2e       	mov	r0, r26
    1298:	06 94       	lsr	r0
    129a:	57 95       	ror	r21
    129c:	47 95       	ror	r20
    129e:	37 95       	ror	r19
    12a0:	27 95       	ror	r18
    12a2:	ba 95       	dec	r27
    12a4:	c9 f7       	brne	.-14     	; 0x1298 <__ultoa_invert+0xa2>
    12a6:	62 0f       	add	r22, r18
    12a8:	73 1f       	adc	r23, r19
    12aa:	84 1f       	adc	r24, r20
    12ac:	95 1f       	adc	r25, r21
    12ae:	a0 1d       	adc	r26, r0
    12b0:	08 95       	ret

000012b2 <_exit>:
    12b2:	f8 94       	cli

000012b4 <__stop_program>:
    12b4:	ff cf       	rjmp	.-2      	; 0x12b4 <__stop_program>
